{"ast":null,"code":"import _slicedToArray from \"/home/alireza/Documents/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/alireza/Documents/react/src/Components/IrisaComponents/ProducerConsumer.js\";\nimport React, { useState, useEffect } from 'react';\nexport function Generator(props) {\n  const onGenerate = props.onGenerate;\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        arr = _useState2[0],\n        setArr = _useState2[1];\n\n  useEffect(() => {\n    onGenerate(arr);\n  }, [arr]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => {\n      const val = Math.floor(Math.random() * 1000);\n      setArr(prev => prev.includes(val) ? prev : [...arr, val]);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Gen\"));\n}\nexport function UseGenerated(props) {\n  const data = props.data;\n  return React.createElement(React.Fragment, null, \"The data will be appeared:\", data !== undefined && data.map(item => {\n    return React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"item\");\n  }));\n}","map":{"version":3,"sources":["/home/alireza/Documents/react/src/Components/IrisaComponents/ProducerConsumer.js"],"names":["React","useState","useEffect","Generator","props","onGenerate","arr","setArr","val","Math","floor","random","prev","includes","UseGenerated","data","undefined","map","item"],"mappings":";;AACA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AAEA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AAAA,QAErBC,UAFqB,GAEPD,KAFO,CAErBC,UAFqB;;AAAA,oBAGPJ,QAAQ,CAAC,EAAD,CAHD;AAAA;AAAA,QAGrBK,GAHqB;AAAA,QAGjBC,MAHiB;;AAK5BL,EAAAA,SAAS,CAAC,MAAI;AACZG,IAAAA,UAAU,CAACC,GAAD,CAAV;AACD,GAFQ,EAEP,CAACA,GAAD,CAFO,CAAT;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAG,MAAI;AAClB,YAAME,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,IAAzB,CAAZ;AACAJ,MAAAA,MAAM,CAACK,IAAI,IAAEA,IAAI,CAACC,QAAL,CAAcL,GAAd,IAAqBI,IAArB,GAA0B,CAAC,GAAGN,GAAJ,EAAQE,GAAR,CAAjC,CAAN;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CADF;AASD;AAED,OAAO,SAASM,YAAT,CAAsBV,KAAtB,EAA4B;AAAA,QAC1BW,IAD0B,GAClBX,KADkB,CAC1BW,IAD0B;AAGjC,SACE,wEAGIA,IAAI,KAAGC,SAAP,IACED,IAAI,CAACE,GAAL,CAASC,IAAI,IAAE;AAAC,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAA2B,GAA3C,CAJN,CADF;AASD","sourcesContent":["\nimport React,{useState,useEffect} from 'react';\n\nexport function Generator(props){\n\n    const {onGenerate} = props;\n    const [arr,setArr] = useState([]);\n  \n    useEffect(()=>{\n      onGenerate(arr)\n    },[arr]);\n  \n    return (\n      <div>\n        <button onClick={(()=>{\n            const val = Math.floor(Math.random()*1000)\n            setArr(prev=>prev.includes(val) ? prev:[...arr,val])\n          })}>Gen</button>\n      </div>\n    );\n  \n  }\n  \n  export function UseGenerated(props){\n    const {data} = props;\n  \n    return (\n      <>\n        The data will be appeared:\n        {\n          data!==undefined &&\n            data.map(item=>{return <label>item</label>}) \n        }\n      </>              \n    );\n  }\n\n"]},"metadata":{},"sourceType":"module"}