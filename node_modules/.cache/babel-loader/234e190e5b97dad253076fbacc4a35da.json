{"ast":null,"code":"import _slicedToArray from \"/home/alireza/Documents/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/alireza/Documents/react/src/App.js\";\nimport ReactVirtualizedTable from './Components/IrisaComponents/MyGrid';\nimport React, { Component, useState, useEffect } from 'react';\nimport SortableTree from 'react-sortable-tree';\nimport 'react-sortable-tree/style.css'; // This only needs to be imported once in your app\n\nimport axios from 'axios';\nimport InfiniteSample from './Components/IrisaComponents/InfiniteSample';\n\nclass Tree extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      treeData: [{\n        title: 'Chicken',\n        children: [{\n          title: 'Egg'\n        }]\n      }, {\n        title: 'Fish',\n        children: [{\n          title: 'fingerline'\n        }]\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        height: 400\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(SortableTree, {\n      treeData: this.state.treeData,\n      onChange: treeData => this.setState({\n        treeData\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction App(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        dataRows = _useState2[0],\n        setDataRows = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        firstRendered = _useState4[0],\n        setFirstRendered = _useState4[1];\n\n  useEffect(() => {\n    if (firstRendered) {\n      axios.get('http://localhost:8081/').then(res => {\n        if (res.status === 200) {\n          setDataRows(res.data);\n          console.log('data', dataRows);\n        } else {\n          alert('error in fetching the data');\n        }\n      });\n      setFirstRendered(false);\n    }\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(InfiniteSample, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/alireza/Documents/react/src/App.js"],"names":["ReactVirtualizedTable","React","Component","useState","useEffect","SortableTree","axios","InfiniteSample","Tree","constructor","props","state","treeData","title","children","render","height","setState","App","dataRows","setDataRows","firstRendered","setFirstRendered","get","then","res","status","data","console","log","alert"],"mappings":";;AAAA,OAAOA,qBAAP,MAAkC,qCAAlC;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,EAAmCC,SAAnC,QAAoD,OAApD;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAO,+BAAP,C,CAAwC;;AACxC,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,6CAA3B;;AAEA,MAAMC,IAAN,SAAmBN,SAAnB,CAA6B;AAC3BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,CACR;AAAEC,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,QAAQ,EAAE,CAAC;AAAED,UAAAA,KAAK,EAAE;AAAT,SAAD;AAA9B,OADQ,EAER;AAAEA,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,QAAQ,EAAE,CAAC;AAAED,UAAAA,KAAK,EAAE;AAAT,SAAD;AAA3B,OAFQ;AADC,KAAb;AAMD;;AAEDE,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AACE,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWC,QADvB;AAEE,MAAA,QAAQ,EAAEA,QAAQ,IAAI,KAAKK,QAAL,CAAc;AAAEL,QAAAA;AAAF,OAAd,CAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAQD;;AArB0B;;AAwB7B,SAASM,GAAT,CAAaR,KAAb,EAAmB;AAAA,oBAEcP,QAAQ,CAAC,EAAD,CAFtB;AAAA;AAAA,QAEVgB,QAFU;AAAA,QAEDC,WAFC;;AAAA,qBAGwBjB,QAAQ,CAAC,IAAD,CAHhC;AAAA;AAAA,QAGVkB,aAHU;AAAA,QAGIC,gBAHJ;;AAKjBlB,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGiB,aAAH,EAAiB;AACff,MAAAA,KAAK,CAACiB,GAAN,CAAU,wBAAV,EACAC,IADA,CACKC,GAAG,IAAE;AACR,YAAGA,GAAG,CAACC,MAAJ,KAAa,GAAhB,EAAoB;AAClBN,UAAAA,WAAW,CAACK,GAAG,CAACE,IAAL,CAAX;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBV,QAAnB;AACD,SAHD,MAII;AACFW,UAAAA,KAAK,CAAC,4BAAD,CAAL;AACD;AACF,OATD;AAWAR,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;AACF,GAfQ,EAeP,EAfO,CAAT;AAiBE,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAmCI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnCJ,CADJ;AAuCH;;AAED,eAAeJ,GAAf","sourcesContent":["import ReactVirtualizedTable from './Components/IrisaComponents/MyGrid';\n\nimport React, { Component,useState,useEffect } from 'react';\nimport SortableTree from 'react-sortable-tree';\nimport 'react-sortable-tree/style.css'; // This only needs to be imported once in your app\nimport axios from 'axios';\nimport InfiniteSample from './Components/IrisaComponents/InfiniteSample';\n\nclass Tree extends Component {\n  constructor(props) {\n    super(props);\n \n    this.state = {\n      treeData: [\n        { title: 'Chicken', children: [{ title: 'Egg' }] },\n        { title: 'Fish', children: [{ title: 'fingerline'}] }\n      ],\n    };\n  }\n \n  render() {\n    return (\n      <div style={{ height: 400 }}>\n        <SortableTree\n          treeData={this.state.treeData}\n          onChange={treeData => this.setState({ treeData })}\n        />\n      </div>\n    );\n  }\n}\n\nfunction App(props){\n\n  const [dataRows,setDataRows] = useState([]);\n  const [firstRendered,setFirstRendered] = useState(true);\n\n  useEffect(()=>{\n    if(firstRendered){\n      axios.get('http://localhost:8081/').\n      then(res=>{\n        if(res.status===200){\n          setDataRows(res.data);\n          console.log('data',dataRows)\n        }\n        else{\n          alert('error in fetching the data')\n        }\n      })\n\n      setFirstRendered(false)\n    }\n  },[])\n\n    return (\n        <div>\n            {/* <ReactVirtualizedTable \n            rows={dataRows}\n            columns={\n              [\n                {\n                  width: 200,\n                  flexGrow: 1.0,\n                  label: 'id',\n                  dataKey: 'id',\n                },\n                {\n                  width: 120,\n                  label: 'first name',\n                  dataKey: 'firstName',\n                  numeric: true,\n                },\n                {\n                  width: 120,\n                  label: 'last name',\n                  dataKey: 'lastName',\n                  numeric: true,\n                },\n                {\n                  width: 120,\n                  label: 'salary',\n                  dataKey: 'salary',\n                  numeric: true,\n                },\n              ]\n            }\n            /> */}\n\n            {/* <Tree /> */}\n\n            <InfiniteSample />\n        </div>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}