{"ast":null,"code":"import _slicedToArray from \"/home/alireza/Documents/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/alireza/Documents/react/src/App.js\";\nimport ReactVirtualizedTable from './Components/IrisaComponents/MyGrid';\nimport React, { memo, Component, useState, useEffect, useRef } from 'react';\nimport SortableTree from 'react-sortable-tree';\nimport 'react-sortable-tree/style.css'; // This only needs to be imported once in your app\n\nimport axios from 'axios';\nimport InfiniteSample from './Components/IrisaComponents/InfiniteSample';\nimport Sample from './Components/IrisaComponents/Sample1';\nimport { SelectValidator } from 'react-material-ui-form-validator';\nimport IrisaDateTime from './Components/IrisaComponents/IrisaDateTime';\nimport Moment from 'moment-jalaali'; //import IbxDatePicker2 from './Components/IrisaComponents/Mydate/IbxDatePicker2'\n\nimport TextField from '@material-ui/core/TextField';\n\nfunction App(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        dataRows = _useState2[0],\n        setDataRows = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        firstRendered = _useState4[0],\n        setFirstRendered = _useState4[1];\n\n  const num = useRef(0);\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        val = _useState6[0],\n        setVal = _useState6[1];\n\n  useEffect(() => {\n    if (firstRendered) {\n      axios.get('http://localhost:8080/getall').then(res => {\n        //console.log(\"get results of webservice\");\n        if (res.status === 200) {\n          setDataRows(res.data);\n          console.log('data', res.data);\n        } else {\n          alert('error in fetching the data');\n        }\n      });\n      setFirstRendered(!firstRendered);\n    } //console.log('useEffect');\n\n\n    if (firstRendered) {\n      //console.log('start of ....');\n      setFirstRendered(false);\n      return () => {\n        setFirstRendered(false);\n      };\n    }\n  }); // let x=''\n  // onChange={e=>setVal(e.target.value)}\n  // setTimeout(()=>{setVal(pval=>pval+1 )},5000);\n  // const [a,setA] = useState(0);\n  // useEffect(()=>{\n  //   setA(1)\n  //   // return ()=>{\n  //   //   setA(1)\n  //   // }\n  // },[]);\n\n  return React.createElement(\"div\", {\n    style: {\n      height: 400\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"number : \", ++num.current), React.createElement(TextField, {\n    onKeyDown: e => {\n      console.log(e.key);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(SortableTree, {\n    treeData: dataRows,\n    onChange: treeData => setDataRows(treeData) //onClick={e=>{console.log(e)}}\n    // map={({\n    //   treeData,\n    //   getNodeKey,\n    //   callback,\n    //   ignoreCollapsed = true,\n    // })=>({})}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }));\n}\n\nexport default memo(App);","map":{"version":3,"sources":["/home/alireza/Documents/react/src/App.js"],"names":["ReactVirtualizedTable","React","memo","Component","useState","useEffect","useRef","SortableTree","axios","InfiniteSample","Sample","SelectValidator","IrisaDateTime","Moment","TextField","App","props","dataRows","setDataRows","firstRendered","setFirstRendered","num","val","setVal","get","then","res","status","data","console","log","alert","height","current","e","key","treeData"],"mappings":";;AAAA,OAAOA,qBAAP,MAAkC,qCAAlC;AAEA,OAAOC,KAAP,IAAgBC,IAAhB,EAAqBC,SAArB,EAA+BC,QAA/B,EAAwCC,SAAxC,EAAkDC,MAAlD,QAAgE,OAAhE;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAO,+BAAP,C,CAAwC;;AACxC,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,6CAA3B;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,SAASC,eAAT,QAAgC,kCAAhC;AACA,OAAOC,aAAP,MAA0B,4CAA1B;AACA,OAAOC,MAAP,MAAmB,gBAAnB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AACA,SAASC,GAAT,CAAaC,KAAb,EAAmB;AAAA,oBAEcZ,QAAQ,CAAI,EAAJ,CAFtB;AAAA;AAAA,QAEVa,QAFU;AAAA,QAEDC,WAFC;;AAAA,qBAIwBd,QAAQ,CAAC,IAAD,CAJhC;AAAA;AAAA,QAIVe,aAJU;AAAA,QAIIC,gBAJJ;;AAKjB,QAAMC,GAAG,GAAGf,MAAM,CAAC,CAAD,CAAlB;;AALiB,qBAMIF,QAAQ,CAAC,CAAD,CANZ;AAAA;AAAA,QAMVkB,GANU;AAAA,QAMNC,MANM;;AAQjBlB,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGc,aAAH,EAAiB;AACfX,MAAAA,KAAK,CAACgB,GAAN,CAAU,8BAAV,EACAC,IADA,CACKC,GAAG,IAAE;AACR;AACA,YAAGA,GAAG,CAACC,MAAJ,KAAa,GAAhB,EAAoB;AAClBT,UAAAA,WAAW,CAACQ,GAAG,CAACE,IAAL,CAAX;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBJ,GAAG,CAACE,IAAvB;AACD,SAHD,MAII;AACFG,UAAAA,KAAK,CAAC,4BAAD,CAAL;AACD;AACF,OAVD;AAYAX,MAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACD,KAfW,CAgBZ;;;AACA,QAAGA,aAAH,EAAiB;AACf;AACAC,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AAEA,aAAO,MAAI;AACTA,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,OAFD;AAGD;AACF,GAzBQ,CAAT,CARiB,CAmCjB;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,SACI;AAAK,IAAA,KAAK,EAAE;AAACY,MAAAA,MAAM,EAAC;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAiB,EAAEX,GAAG,CAACY,OAAvB,CADF,EA2CI,oBAAC,SAAD;AACA,IAAA,SAAS,EAAEC,CAAC,IAAE;AAACL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAC,CAACC,GAAd;AAAmB,KADlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3CJ,EAiDA,oBAAC,YAAD;AACE,IAAA,QAAQ,EAAElB,QADZ;AAEE,IAAA,QAAQ,EAAEmB,QAAQ,IAAIlB,WAAW,CAACkB,QAAD,CAFnC,CAGE;AACA;AACA;AACA;AACA;AACA;AACA;AATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjDA,CADJ;AAkEH;;AAED,eAAelC,IAAI,CAACa,GAAD,CAAnB","sourcesContent":["import ReactVirtualizedTable from './Components/IrisaComponents/MyGrid';\n\nimport React, { memo,Component,useState,useEffect,useRef } from 'react';\nimport SortableTree from 'react-sortable-tree';\nimport 'react-sortable-tree/style.css'; // This only needs to be imported once in your app\nimport axios from 'axios';\nimport InfiniteSample from './Components/IrisaComponents/InfiniteSample';\nimport Sample from './Components/IrisaComponents/Sample1';\nimport { SelectValidator } from 'react-material-ui-form-validator';\nimport IrisaDateTime from './Components/IrisaComponents/IrisaDateTime';\nimport Moment from 'moment-jalaali';\n//import IbxDatePicker2 from './Components/IrisaComponents/Mydate/IbxDatePicker2'\nimport TextField from '@material-ui/core/TextField'\nfunction App(props){\n\n  const [dataRows,setDataRows] = useState(   [] \n  );\n  const [firstRendered,setFirstRendered] = useState(true);\n  const num = useRef(0);\n  const [val,setVal] = useState(0)\n\n  useEffect(()=>{\n    if(firstRendered){\n      axios.get('http://localhost:8080/getall').\n      then(res=>{\n        //console.log(\"get results of webservice\");\n        if(res.status===200){\n          setDataRows(res.data);\n          console.log('data',res.data)\n        }\n        else{\n          alert('error in fetching the data')\n        }\n      })\n\n      setFirstRendered(!firstRendered)\n    }\n    //console.log('useEffect');\n    if(firstRendered){\n      //console.log('start of ....');\n      setFirstRendered(false);\n\n      return ()=>{\n        setFirstRendered(false);\n      }\n    }\n  })\n\n  // let x=''\n  // onChange={e=>setVal(e.target.value)}\n\n  // setTimeout(()=>{setVal(pval=>pval+1 )},5000);\n\n  // const [a,setA] = useState(0);\n  // useEffect(()=>{\n  //   setA(1)\n  //   // return ()=>{\n  //   //   setA(1)\n  //   // }\n  // },[]);\n\n    return (\n        <div style={{height:400}}>\n          <label>number : {++num.current}</label>\n\n          {/* <button>{`${String(currentDate)}`}</button>\n          <IbxDatePicker2\n          locale={\"fa\"}\n          value={a}\n          handleDateChange={setA}\n          /> */}\n\n          {/* <input type='text' value={val}  /> */}\n            {/* <ReactVirtualizedTable \n            rows={dataRows}\n            columns={\n              [\n                {\n                  width: 200,\n                  flexGrow: 1.0,\n                  label: 'id',\n                  dataKey: 'id',\n                },\n                {\n                  width: 120,\n                  label: 'first name',\n                  dataKey: 'firstName',\n                  numeric: true,\n                },\n                {\n                  width: 120,\n                  label: 'last name',\n                  dataKey: 'lastName',\n                  numeric: true,\n                },\n                {\n                  width: 120,\n                  label: 'salary',\n                  dataKey: 'salary',\n                  numeric: true,\n                },\n              ]\n            }\n            /> */}\n\n            <TextField \n            onKeyDown={e=>{console.log(e.key)}}\n            />\n\n            {/* <input type='TEXT' onKeyDown={e=>{console.log(e.key)}}/> */}\n\n        <SortableTree\n          treeData={dataRows}\n          onChange={treeData => setDataRows(treeData)}\n          //onClick={e=>{console.log(e)}}\n          // map={({\n          //   treeData,\n          //   getNodeKey,\n          //   callback,\n          //   ignoreCollapsed = true,\n          // })=>({})}\n        />\n\n\n\n        </div>\n    )\n}\n\nexport default memo(App)\n"]},"metadata":{},"sourceType":"module"}