{"ast":null,"code":"import _slicedToArray from \"/home/alireza/Documents/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/alireza/Documents/react/src/Components/IrisaComponents/UsersGroupsApprolesSearch.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Select, MenuItem, Grid, Button, List, TextField, Input, InputAdornment, IconButton, ListItem, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, TableSortLabel, TableFooter, Checkbox, Chip, Avatar } from '@material-ui/core';\nimport { Search, Close } from '@material-ui/icons';\n\nfunction SelectedValues(props) {\n  const data = props.data;\n  console.log(\"SelectedValues is rendering\", data);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, data.map(item => {\n    return React.createElement(Chip, {\n      avatar: React.createElement(Avatar, {\n        onClick: e => {//selectedID.delete(item);\n          //setSelectedID(selectedID);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(Close, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      })),\n      label: \"Clickable Deletable Chip\" //onClick={handleClick}\n      //onDelete={handleDelete}\n      //className={classes.chip}\n      ,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    });\n  }));\n}\n\nfunction UsersGroupsApprolesSearch(props) {\n  const open = props.open,\n        data = props.data;\n\n  const _useState = useState(\"all\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedValueToSearch = _useState2[0],\n        setSelectedValueToSearch = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        valueToSearch = _useState4[0],\n        setValueToSearch = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        firstName = _useState6[0],\n        setFirstName = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        lastName = _useState8[0],\n        setLastName = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        email = _useState10[0],\n        setEmail = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        ID = _useState12[0],\n        setID = _useState12[1];\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        isShowList = _useState14[0],\n        setisShowList = _useState14[1];\n\n  const _useState15 = useState(5),\n        _useState16 = _slicedToArray(_useState15, 2),\n        rowsPerPage = _useState16[0],\n        setRowsPerPage = _useState16[1];\n\n  const _useState17 = useState(0),\n        _useState18 = _slicedToArray(_useState17, 2),\n        page = _useState18[0],\n        setPage = _useState18[1];\n\n  const _useState19 = useState(false),\n        _useState20 = _slicedToArray(_useState19, 2),\n        chk = _useState20[0],\n        setChk = _useState20[1];\n\n  const _useState21 = useState([\"123\"]),\n        _useState22 = _slicedToArray(_useState21, 2),\n        selectedID = _useState22[0],\n        setSelectedID = _useState22[1];\n\n  useEffect(() => {\n    if (firstName.length === 0 && lastName.length === 0 && email.length === 0 && ID.length === 0) setValueToSearch(\"\");else setValueToSearch(`${firstName} , ${lastName} , ${email} , ${ID}`);\n  }, [firstName, lastName, email, ID]);\n\n  function resetFields() {\n    setFirstName(\"\");\n    setLastName(\"\");\n    setEmail(\"\");\n    setID(\"\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    open: open,\n    fullWidth: true,\n    maxWidth: 'xl',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"\\u062C\\u0633\\u062A\\u062C\\u0648\\u06CC \\u06A9\\u0627\\u0631\\u0628\\u0631\\u0627\\u0646 \\u06AF\\u0631\\u0648\\u0647\\u0647\\u0627 \\u0648 \\u0646\\u0642\\u0634 \\u0647\\u0627\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: e => {\n      resetFields();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"\\u0631\\u06CC\\u0633\\u062A\")), React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: e => {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"\\u062C\\u0633\\u062A\\u062C\\u0648\")), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Input, {\n    value: valueToSearch,\n    fullWidth: true,\n    label: \"serach use , groups , ...\",\n    onChange: e => {\n      setValueToSearch(e.target.value);\n    },\n    endAdornment: React.createElement(InputAdornment, {\n      position: \"start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: e => {\n        setisShowList(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Search, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Select, {\n    value: selectedValueToSearch,\n    autoWidth: true,\n    onChange: e => {\n      setSelectedValueToSearch(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"all\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"All\"), React.createElement(MenuItem, {\n    value: \"users\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Users\"), React.createElement(MenuItem, {\n    value: \"groups\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Groups\"), React.createElement(MenuItem, {\n    value: \"applicationRole\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Application Role\")))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"\\u0627\\u06CC\\u0645\\u06CC\\u0644\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"\\u0646\\u0627\\u0645 \\u062E\\u0627\\u0646\\u0648\\u0627\\u062F\\u06AF\\u06CC\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"\\u0646\\u0627\\u0645\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"\\u0634\\u0646\\u0627\\u0633\\u0647\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \" \")), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, data !== undefined && data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return React.createElement(TableRow, {\n      key: row.ID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, row.email), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, row.lastName), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, row.firstName), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      name: row.ID,\n      value: chk,\n      onChange: e => {\n        const checked = e.target.checked;\n        const name = e.target.name; //e.target.checked ? selectedID.push(e.target.name):selectedID.includes(e.target.name) ? selectedID.splice(selectedID.indexOf(e.target.name)):console.log(\"nothing\")\n\n        setSelectedID(checked ? [...selectedID, name] : selec);\n        console.log(selectedID);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })));\n  })), React.createElement(TableFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    colSpan: 3,\n    count: data.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    SelectProps: {\n      native: true\n    },\n    onChangePage: (e, p) => {\n      setPage(p);\n    },\n    onChangeRowsPerPage: e => {\n      setRowsPerPage(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }))))), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Selected Items:\", selectedID.map(item => {\n    return React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, item, \" - \");\n  })))), React.createElement(Dialog, {\n    open: isShowList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    key: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"\\u0646\\u0627\\u0645\",\n    value: firstName,\n    onChange: e => setFirstName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  })), React.createElement(ListItem, {\n    key: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"\\u0646\\u0627\\u0645 \\u062E\\u0627\\u0646\\u0648\\u0627\\u062F\\u06AF\\u06CC\",\n    value: lastName,\n    onChange: e => setLastName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  })), React.createElement(ListItem, {\n    key: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"\\u0627\\u06CC\\u0645\\u06CC\\u0644\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  })), React.createElement(ListItem, {\n    key: \"ID\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"\\u0634\\u0646\\u0627\\u0633\\u0647 \\u062C\\u0633\\u062A\\u062C\\u0648\",\n    value: ID,\n    onChange: e => setID(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  })), React.createElement(ListItem, {\n    key: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: e => {\n      setisShowList(false);\n      resetFields();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, \"\\u0627\\u0646\\u0635\\u0631\\u0627\\u0641\"), React.createElement(Button, {\n    onClick: e => {\n      //setValueToSearch(\"sdff sdfdsfdsf fsdfsddsf\");\n      //firstName+\"-\"+lastName+\"-\"+email+\"-\"+ID \n      setisShowList(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"\\u062A\\u0627\\u06CC\\u06CC\\u062F\")))));\n}\n\nexport default UsersGroupsApprolesSearch;","map":{"version":3,"sources":["/home/alireza/Documents/react/src/Components/IrisaComponents/UsersGroupsApprolesSearch.js"],"names":["React","useState","useEffect","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Select","MenuItem","Grid","Button","List","TextField","Input","InputAdornment","IconButton","ListItem","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TableSortLabel","TableFooter","Checkbox","Chip","Avatar","Search","Close","SelectedValues","props","data","console","log","map","item","e","UsersGroupsApprolesSearch","open","selectedValueToSearch","setSelectedValueToSearch","valueToSearch","setValueToSearch","firstName","setFirstName","lastName","setLastName","email","setEmail","ID","setID","isShowList","setisShowList","rowsPerPage","setRowsPerPage","page","setPage","chk","setChk","selectedID","setSelectedID","length","resetFields","target","value","undefined","slice","row","checked","name","selec","native","p"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport {Dialog,DialogActions,DialogContent,DialogContentText,DialogTitle,\n    Select,MenuItem,Grid,Button,List,TextField,Input,InputAdornment,IconButton,ListItem,\n    Table,TableBody,TableCell,TableHead,TablePagination,TableRow,TableSortLabel,TableFooter,Checkbox,Chip,Avatar} from '@material-ui/core';\nimport {Search,Close} from '@material-ui/icons';\n\nfunction SelectedValues(props){\n    const {data} = props\n    console.log(\"SelectedValues is rendering\",data)\n    return (\n        <div>\n            {data.map(item=>{\n                            return (\n                                <Chip\n                                avatar={\n                                  <Avatar onClick={e=>{\n                                    //selectedID.delete(item);\n                                    //setSelectedID(selectedID);\n                                  }}>\n                                    <Close />\n                                  </Avatar>\n                                }\n                                label=\"Clickable Deletable Chip\"\n                                //onClick={handleClick}\n                                //onDelete={handleDelete}\n                                //className={classes.chip}\n                                variant=\"outlined\"\n                              />\n                            )\n            })}\n\n        </div>\n    )\n}\n\nfunction UsersGroupsApprolesSearch(props){\n    const {open,data} = props;\n\n    const [selectedValueToSearch,setSelectedValueToSearch] = useState(\"all\");\n    const [valueToSearch,setValueToSearch] = useState(\"\");\n    const [firstName,setFirstName] = useState(\"\");\n    const [lastName,setLastName] = useState(\"\");\n    const [email,setEmail] = useState(\"\");\n    const [ID,setID] = useState(\"\");\n    const [isShowList,setisShowList] = useState(false);\n    const [rowsPerPage,setRowsPerPage] = useState(5);\n    const [page,setPage] = useState(0);\n    const [chk,setChk] = useState(false);\n    const [selectedID,setSelectedID] = useState([\"123\"]);\n\n    useEffect(()=>{\n        if(firstName.length===0 && lastName.length===0 && email.length===0 && ID.length===0)\n            setValueToSearch(\"\")\n        else\n            setValueToSearch(`${firstName} , ${lastName} , ${email} , ${ID}`)                \n    },[firstName,lastName,email,ID])    \n\n    function resetFields(){\n        setFirstName(\"\")\n        setLastName(\"\")\n        setEmail(\"\")\n        setID(\"\")\n    }\n\n    return (\n        <div>\n        <Dialog open={open} fullWidth={true} maxWidth={'xl'}>\n            <DialogTitle>جستجوی کاربران گروهها و نقش ها</DialogTitle>\n            <DialogContent>\n                {/* <DialogContentText>کاربر می تواند جستجو کند</DialogContentText> */}\n                <Grid container spacing={4}>\n                    <Grid item xs={1}>\n                        <Button onClick={e=>{resetFields()}}>ریست</Button>\n                    </Grid>   \n\n                    <Grid item xs={1}>\n                        <Button onClick={e=>{}}>جستجو</Button>\n                    </Grid>\n\n                    <Grid item xs={6}>\n                    <Input\n                    value={valueToSearch}\n                    fullWidth={true}\n                    label={\"serach use , groups , ...\"}\n                    onChange={e=>{setValueToSearch(e.target.value);}}\n                    endAdornment={\n                        <InputAdornment position=\"start\">\n                            <IconButton onClick={e=>{setisShowList(true);}}><Search/></IconButton>\n                        </InputAdornment>\n                    }\n                    />\n                    </Grid>\n\n                    <Grid item xs={4}>\n                        <Select \n                        value={selectedValueToSearch} \n                        autoWidth={true}\n                        onChange={e=>{setSelectedValueToSearch(e.target.value)}}>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                        <MenuItem value={\"users\"}>Users</MenuItem>\n                        <MenuItem value={\"groups\"}>Groups</MenuItem>\n                        <MenuItem value={\"applicationRole\"}>Application Role</MenuItem>\n                        </Select>\n                    </Grid>\n                </Grid>    \n                <Grid item xs={12}>\n                    <Table>\n                        <TableHead>\n                            <TableCell align=\"right\">ایمیل</TableCell>  \n                            <TableCell align=\"right\">نام خانوادگی</TableCell>\n                            <TableCell align=\"right\">نام</TableCell>\n                            <TableCell align=\"right\">شناسه</TableCell>\n                            <TableCell> </TableCell>\n                        </TableHead>\n                        <TableBody>\n                        {   data!== undefined &&\n                            data.slice(page*rowsPerPage,page*rowsPerPage+rowsPerPage).map(row=>{return (\n                            <TableRow key={row.ID}>\n                                <TableCell align=\"right\">{row.email}</TableCell>        \n                                <TableCell align=\"right\">{row.lastName}</TableCell>        \n                                <TableCell align=\"right\">{row.firstName}</TableCell>        \n                                <TableCell align=\"right\"><Checkbox name={row.ID} value={chk} onChange={e=>\n                                        {                 \n                                            const checked = e.target.checked         \n                                            const name = e.target.name                  \n                                            //e.target.checked ? selectedID.push(e.target.name):selectedID.includes(e.target.name) ? selectedID.splice(selectedID.indexOf(e.target.name)):console.log(\"nothing\")\n                                            setSelectedID(checked? [...selectedID,name]: selec)\n                                            console.log(selectedID)\n\n                                        }\n                                    } /></TableCell>        \n                            </TableRow>)})\n                        }\n                        </TableBody>   \n                        <TableFooter>\n                            <TableRow>\n                                <TablePagination\n                                    rowsPerPageOptions={[5, 10, 25]}\n                                    colSpan={3}\n                                    count={data.length}\n                                    rowsPerPage={rowsPerPage}\n                                    page={page}\n                                    SelectProps={{\n                                        native: true,\n                                      }}\n                                    onChangePage={(e,p)=>{setPage(p)}}\n                                    onChangeRowsPerPage={e=>{setRowsPerPage(e.target.value)}}\n                                />\n                            </TableRow>       \n                        </TableFooter> \n                    </Table>\n                    </Grid>\n                    <Grid item >\n                        Selected Items:\n                        {\n                            selectedID.map(item=>{\n                                return (\n                                    <label>{item} - </label>\n                                )\n                            })\n                        }\n                        {/* <SelectedValues data={selectedID}/> */}\n                        {/* {selectedID.map(item=>{\n                            return (\n                                <Chip\n                                avatar={\n                                  <Avatar onClick={e=>{\n                                    selectedID.delete(item);\n                                    setSelectedID(selectedID);\n                                  }}>\n                                    <Close />\n                                  </Avatar>\n                                }\n                                label=\"Clickable Deletable Chip\"\n                                //onClick={handleClick}\n                                //onDelete={handleDelete}\n                                //className={classes.chip}\n                                variant=\"outlined\"\n                              />\n                            )\n                        })} */}\n                    </Grid>\n\n            </DialogContent>\n        </Dialog>\n        <Dialog open={isShowList}>\n            <List>\n                <ListItem key=\"firstName\"><TextField label=\"نام\" value={firstName} onChange={e=>setFirstName(e.target.value)}/></ListItem>\n                <ListItem key=\"lastName\"><TextField label=\"نام خانوادگی\" value={lastName}  onChange={e=>setLastName(e.target.value)}/></ListItem>\n                <ListItem key=\"email\"><TextField label=\"ایمیل\" value={email}  onChange={e=>setEmail(e.target.value)}/></ListItem>\n                <ListItem key=\"ID\"><TextField label=\"شناسه جستجو\" value={ID}  onChange={e=>setID(e.target.value)}/></ListItem>\n                <ListItem key=\"button\"><Button onClick={e=>{\n                        setisShowList(false)\n                        resetFields();\n                    }}\n                    >انصراف</Button> \n                    <Button onClick={e=>{\n                        //setValueToSearch(\"sdff sdfdsfdsf fsdfsddsf\");\n                         //firstName+\"-\"+lastName+\"-\"+email+\"-\"+ID \n                        setisShowList(false) }}>تایید</Button>                               \n                </ListItem>    \n            </List>            \n        </Dialog>                        \n        </div>\n    );\n}\n\nexport default UsersGroupsApprolesSearch;\n"]},"metadata":{},"sourceType":"module"}