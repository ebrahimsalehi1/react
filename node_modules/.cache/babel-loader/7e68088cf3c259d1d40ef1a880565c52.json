{"ast":null,"code":"import _objectSpread from \"/home/alireza/Documents/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/home/alireza/Documents/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/alireza/Documents/react/src/Components/IrisaComponents/MyGrid.js\";\n\n/* eslint-disable no-console */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\nimport { AutoSizer, Column, SortDirection, Table } from 'react-virtualized';\n\nconst styles = theme => ({\n  table: {\n    fontFamily: theme.typography.fontFamily\n  },\n  flexContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    boxSizing: 'border-box'\n  },\n  tableRow: {\n    cursor: 'pointer'\n  },\n  tableRowHover: {\n    '&:hover': {\n      backgroundColor: theme.palette.grey[200]\n    }\n  },\n  tableCell: {\n    flex: 1\n  },\n  noClick: {\n    cursor: 'initial'\n  }\n});\n\nclass MuiVirtualizedTable extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    this.getRowClassName = ({\n      index\n    }) => {\n      const _this$props = this.props,\n            classes = _this$props.classes,\n            rowClassName = _this$props.rowClassName,\n            onRowClick = _this$props.onRowClick;\n      return classNames(classes.tableRow, classes.flexContainer, rowClassName, {\n        [classes.tableRowHover]: index !== -1 && onRowClick != null\n      });\n    };\n\n    this.cellRenderer = ({\n      cellData,\n      columnIndex = null\n    }) => {\n      const _this$props2 = this.props,\n            columns = _this$props2.columns,\n            classes = _this$props2.classes,\n            rowHeight = _this$props2.rowHeight,\n            onRowClick = _this$props2.onRowClick;\n      return React.createElement(TableCell, {\n        component: \"div\",\n        className: classNames(classes.tableCell, classes.flexContainer, {\n          [classes.noClick]: onRowClick == null\n        }),\n        variant: \"body\",\n        style: {\n          height: rowHeight\n        },\n        align: columnIndex != null && columns[columnIndex].numeric || false ? 'right' : 'left',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, cellData);\n    };\n\n    this.headerRenderer = ({\n      label,\n      columnIndex,\n      dataKey,\n      sortBy,\n      sortDirection\n    }) => {\n      const _this$props3 = this.props,\n            headerHeight = _this$props3.headerHeight,\n            columns = _this$props3.columns,\n            classes = _this$props3.classes,\n            sort = _this$props3.sort;\n      const direction = {\n        [SortDirection.ASC]: 'asc',\n        [SortDirection.DESC]: 'desc'\n      };\n      const inner = !columns[columnIndex].disableSort && sort != null ? React.createElement(TableSortLabel, {\n        active: dataKey === sortBy,\n        direction: direction[sortDirection],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, label) : label;\n      return React.createElement(TableCell, {\n        component: \"div\",\n        className: classNames(classes.tableCell, classes.flexContainer, classes.noClick),\n        variant: \"head\",\n        style: {\n          height: headerHeight\n        },\n        align: columns[columnIndex].numeric || false ? 'right' : 'left',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, inner);\n    };\n  }\n\n  render() {\n    const _this$props4 = this.props,\n          classes = _this$props4.classes,\n          columns = _this$props4.columns,\n          tableProps = _objectWithoutProperties(_this$props4, [\"classes\", \"columns\"]);\n\n    return React.createElement(AutoSizer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, ({\n      height,\n      width\n    }) => React.createElement(Table, Object.assign({\n      className: classes.table,\n      height: height,\n      width: width\n    }, tableProps, {\n      rowClassName: this.getRowClassName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), columns.map((_ref, index) => {\n      let _ref$cellContentRende = _ref.cellContentRenderer,\n          cellContentRenderer = _ref$cellContentRende === void 0 ? null : _ref$cellContentRende,\n          className = _ref.className,\n          dataKey = _ref.dataKey,\n          other = _objectWithoutProperties(_ref, [\"cellContentRenderer\", \"className\", \"dataKey\"]);\n\n      let renderer;\n\n      if (cellContentRenderer != null) {\n        renderer = cellRendererProps => this.cellRenderer({\n          cellData: cellContentRenderer(cellRendererProps),\n          columnIndex: index\n        });\n      } else {\n        renderer = this.cellRenderer;\n      }\n\n      return React.createElement(Column, Object.assign({\n        key: dataKey,\n        headerRenderer: headerProps => this.headerRenderer(_objectSpread({}, headerProps, {\n          columnIndex: index\n        })),\n        className: classNames(classes.flexContainer, className),\n        cellRenderer: renderer,\n        dataKey: dataKey\n      }, other, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }));\n    })));\n  }\n\n}\n\nMuiVirtualizedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    cellContentRenderer: PropTypes.func,\n    dataKey: PropTypes.string.isRequired,\n    width: PropTypes.number.isRequired\n  })).isRequired,\n  headerHeight: PropTypes.number,\n  onRowClick: PropTypes.func,\n  rowClassName: PropTypes.string,\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  sort: PropTypes.func\n};\nMuiVirtualizedTable.defaultProps = {\n  headerHeight: 56,\n  rowHeight: 56\n};\nconst WrappedVirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\nconst data = [['Frozen yoghurt', 159, 6.0, 24, 4.0], ['Ice cream sandwich', 237, 9.0, 37, 4.3], ['Eclair', 262, 16.0, 24, 6.0], ['Cupcake', 305, 3.7, 67, 4.3], ['Gingerbread', 356, 16.0, 49, 3.9]];\nlet id = 0;\n\nfunction createData(dessert, calories, fat, carbs, protein) {\n  id += 1;\n  return {\n    id,\n    dessert,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\n\nconst rows = [];\n\nfor (let i = 0; i < 200; i += 1) {\n  const randomSelection = data[Math.floor(Math.random() * data.length)];\n  rows.push(createData(...randomSelection));\n}\n\nfunction ReactVirtualizedTable() {\n  return React.createElement(Paper, {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(WrappedVirtualizedTable, {\n    rowCount: rows.length,\n    rowGetter: ({\n      index\n    }) => rows[index],\n    onRowClick: event => console.log(event),\n    columns: [{\n      width: 200,\n      flexGrow: 1.0,\n      label: 'Dessert',\n      dataKey: 'dessert'\n    }, {\n      width: 120,\n      label: 'Calories (g)',\n      dataKey: 'calories',\n      numeric: true\n    }, {\n      width: 120,\n      label: 'Fat (g)',\n      dataKey: 'fat',\n      numeric: true\n    }, {\n      width: 120,\n      label: 'Carbs (g)',\n      dataKey: 'carbs',\n      numeric: true\n    }, {\n      width: 120,\n      label: 'Protein (g)',\n      dataKey: 'protein',\n      numeric: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }));\n}\n\nexport default ReactVirtualizedTable;","map":{"version":3,"sources":["/home/alireza/Documents/react/src/Components/IrisaComponents/MyGrid.js"],"names":["React","PropTypes","classNames","withStyles","TableCell","TableSortLabel","Paper","AutoSizer","Column","SortDirection","Table","styles","theme","table","fontFamily","typography","flexContainer","display","alignItems","boxSizing","tableRow","cursor","tableRowHover","backgroundColor","palette","grey","tableCell","flex","noClick","MuiVirtualizedTable","PureComponent","getRowClassName","index","props","classes","rowClassName","onRowClick","cellRenderer","cellData","columnIndex","columns","rowHeight","height","numeric","headerRenderer","label","dataKey","sortBy","sortDirection","headerHeight","sort","direction","ASC","DESC","inner","disableSort","render","tableProps","width","map","cellContentRenderer","className","other","renderer","cellRendererProps","headerProps","propTypes","object","isRequired","arrayOf","shape","func","string","number","oneOfType","defaultProps","WrappedVirtualizedTable","data","id","createData","dessert","calories","fat","carbs","protein","rows","i","randomSelection","Math","floor","random","length","push","ReactVirtualizedTable","event","console","log","flexGrow"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\nimport { AutoSizer, Column, SortDirection, Table } from 'react-virtualized';\n\nconst styles = theme => ({\n  table: {\n    fontFamily: theme.typography.fontFamily,\n  },\n  flexContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    boxSizing: 'border-box',\n  },\n  tableRow: {\n    cursor: 'pointer',\n  },\n  tableRowHover: {\n    '&:hover': {\n      backgroundColor: theme.palette.grey[200],\n    },\n  },\n  tableCell: {\n    flex: 1,\n  },\n  noClick: {\n    cursor: 'initial',\n  },\n});\n\nclass MuiVirtualizedTable extends React.PureComponent {\n  getRowClassName = ({ index }) => {\n    const { classes, rowClassName, onRowClick } = this.props;\n\n    return classNames(classes.tableRow, classes.flexContainer, rowClassName, {\n      [classes.tableRowHover]: index !== -1 && onRowClick != null,\n    });\n  };\n\n  cellRenderer = ({ cellData, columnIndex = null }) => {\n    const { columns, classes, rowHeight, onRowClick } = this.props;\n    return (\n      <TableCell\n        component=\"div\"\n        className={classNames(classes.tableCell, classes.flexContainer, {\n          [classes.noClick]: onRowClick == null,\n        })}\n        variant=\"body\"\n        style={{ height: rowHeight }}\n        align={(columnIndex != null && columns[columnIndex].numeric) || false ? 'right' : 'left'}\n      >\n        {cellData}\n      </TableCell>\n    );\n  };\n\n  headerRenderer = ({ label, columnIndex, dataKey, sortBy, sortDirection }) => {\n    const { headerHeight, columns, classes, sort } = this.props;\n    const direction = {\n      [SortDirection.ASC]: 'asc',\n      [SortDirection.DESC]: 'desc',\n    };\n\n    const inner =\n      !columns[columnIndex].disableSort && sort != null ? (\n        <TableSortLabel active={dataKey === sortBy} direction={direction[sortDirection]}>\n          {label}\n        </TableSortLabel>\n      ) : (\n        label\n      );\n\n    return (\n      <TableCell\n        component=\"div\"\n        className={classNames(classes.tableCell, classes.flexContainer, classes.noClick)}\n        variant=\"head\"\n        style={{ height: headerHeight }}\n        align={columns[columnIndex].numeric || false ? 'right' : 'left'}\n      >\n        {inner}\n      </TableCell>\n    );\n  };\n\n  render() {\n    const { classes, columns, ...tableProps } = this.props;\n    return (\n      <AutoSizer>\n        {({ height, width }) => (\n          <Table\n            className={classes.table}\n            height={height}\n            width={width}\n            {...tableProps}\n            rowClassName={this.getRowClassName}\n          >\n            {columns.map(({ cellContentRenderer = null, className, dataKey, ...other }, index) => {\n              let renderer;\n              if (cellContentRenderer != null) {\n                renderer = cellRendererProps =>\n                  this.cellRenderer({\n                    cellData: cellContentRenderer(cellRendererProps),\n                    columnIndex: index,\n                  });\n              } else {\n                renderer = this.cellRenderer;\n              }\n\n              return (\n                <Column\n                  key={dataKey}\n                  headerRenderer={headerProps =>\n                    this.headerRenderer({\n                      ...headerProps,\n                      columnIndex: index,\n                    })\n                  }\n                  className={classNames(classes.flexContainer, className)}\n                  cellRenderer={renderer}\n                  dataKey={dataKey}\n                  {...other}\n                />\n              );\n            })}\n          </Table>\n        )}\n      </AutoSizer>\n    );\n  }\n}\n\nMuiVirtualizedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      cellContentRenderer: PropTypes.func,\n      dataKey: PropTypes.string.isRequired,\n      width: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  headerHeight: PropTypes.number,\n  onRowClick: PropTypes.func,\n  rowClassName: PropTypes.string,\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  sort: PropTypes.func,\n};\n\nMuiVirtualizedTable.defaultProps = {\n  headerHeight: 56,\n  rowHeight: 56,\n};\n\nconst WrappedVirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\n\nconst data = [\n  ['Frozen yoghurt', 159, 6.0, 24, 4.0],\n  ['Ice cream sandwich', 237, 9.0, 37, 4.3],\n  ['Eclair', 262, 16.0, 24, 6.0],\n  ['Cupcake', 305, 3.7, 67, 4.3],\n  ['Gingerbread', 356, 16.0, 49, 3.9],\n];\n\nlet id = 0;\nfunction createData(dessert, calories, fat, carbs, protein) {\n  id += 1;\n  return { id, dessert, calories, fat, carbs, protein };\n}\n\nconst rows = [];\n\nfor (let i = 0; i < 200; i += 1) {\n  const randomSelection = data[Math.floor(Math.random() * data.length)];\n  rows.push(createData(...randomSelection));\n}\n\nfunction ReactVirtualizedTable() {\n  return (\n    <Paper style={{ height: 400, width: '100%' }}>\n      <WrappedVirtualizedTable\n        rowCount={rows.length}\n        rowGetter={({ index }) => rows[index]}\n        onRowClick={event => console.log(event)}\n        columns={[\n          {\n            width: 200,\n            flexGrow: 1.0,\n            label: 'Dessert',\n            dataKey: 'dessert',\n          },\n          {\n            width: 120,\n            label: 'Calories (g)',\n            dataKey: 'calories',\n            numeric: true,\n          },\n          {\n            width: 120,\n            label: 'Fat (g)',\n            dataKey: 'fat',\n            numeric: true,\n          },\n          {\n            width: 120,\n            label: 'Carbs (g)',\n            dataKey: 'carbs',\n            numeric: true,\n          },\n          {\n            width: 120,\n            label: 'Protein (g)',\n            dataKey: 'protein',\n            numeric: true,\n          },\n        ]}\n      />\n    </Paper>\n  );\n}\n\nexport default ReactVirtualizedTable;\n"]},"metadata":{},"sourceType":"module"}