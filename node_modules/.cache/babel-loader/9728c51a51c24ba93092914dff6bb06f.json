{"ast":null,"code":"import _objectSpread from \"/home/alireza/Documents/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/home/alireza/Documents/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/alireza/Documents/react/src/Components/IrisaComponents/MyGrid.js\";\n\n/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\nimport { AutoSizer, Column, SortDirection, Table, List } from 'react-virtualized';\n\nconst styles = theme => ({\n  table: {\n    fontFamily: theme.typography.fontFamily\n  },\n  flexContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    boxSizing: 'border-box'\n  },\n  tableRow: {\n    cursor: 'pointer'\n  },\n  tableRowHover: {\n    '&:hover': {\n      backgroundColor: theme.palette.grey[200]\n    }\n  },\n  tableCell: {\n    flex: 1\n  },\n  noClick: {\n    cursor: 'initial'\n  }\n});\n\nfunction ReactVirtualizedTable(props) {\n  const classes = props.classes,\n        columns = props.columns,\n        tableProps = _objectWithoutProperties(props, [\"classes\", \"columns\"]); //const [width,setWidth] = useState(400)\n  //const [height,setHeight] = useState(400)\n\n\n  const getRowClassName = ({\n    index\n  }) => {\n    const classes = props.classes,\n          rowClassName = props.rowClassName,\n          onRowClick = props.onRowClick;\n    return classNames(classes.tableRow, classes.flexContainer, rowClassName, {\n      [classes.tableRowHover]: index !== -1 && onRowClick != null\n    });\n  };\n\n  const cellRenderer = ({\n    cellData,\n    columnIndex = null\n  }) => {\n    const columns = props.columns,\n          classes = props.classes,\n          rowHeight = props.rowHeight,\n          onRowClick = props.onRowClick;\n    return React.createElement(TableCell, {\n      component: \"div\",\n      className: classNames(classes.tableCell, classes.flexContainer, {\n        [classes.noClick]: onRowClick == null\n      }),\n      variant: \"body\",\n      style: {\n        height: rowHeight\n      },\n      align: columnIndex != null && columns[columnIndex].numeric || false ? 'right' : 'left',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, cellData);\n  };\n\n  const headerRenderer = ({\n    label,\n    columnIndex,\n    dataKey,\n    sortBy,\n    sortDirection\n  }) => {\n    const headerHeight = props.headerHeight,\n          columns = props.columns,\n          classes = props.classes,\n          sort = props.sort;\n    const direction = {\n      [SortDirection.ASC]: 'asc',\n      [SortDirection.DESC]: 'desc'\n    };\n    const inner = !columns[columnIndex].disableSort && sort != null ? React.createElement(TableSortLabel, {\n      active: dataKey === sortBy,\n      direction: direction[sortDirection],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, label) : label;\n    return React.createElement(TableCell, {\n      component: \"div\",\n      className: classNames(classes.tableCell, classes.flexContainer, classes.noClick),\n      variant: \"head\",\n      style: {\n        height: headerHeight\n      },\n      align: columns[columnIndex].numeric || false ? 'right' : 'left',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, inner);\n  };\n\n  return (// <ul>\n    //   {\n    //     [...Array(1000000).keys()].map(item=>(\n    //       <li key={item}>Row {item}</li>\n    //     ))\n    //   }\n    // </ul>\n    React.createElement(AutoSizer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, ({\n      height,\n      width\n    }) => React.createElement(Table, Object.assign({\n      className: classes.table,\n      height: height,\n      width: width\n    }, tableProps, {\n      rowClassName: getRowClassName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), columns.map((_ref, index) => {\n      let _ref$cellContentRende = _ref.cellContentRenderer,\n          cellContentRenderer = _ref$cellContentRende === void 0 ? null : _ref$cellContentRende,\n          className = _ref.className,\n          dataKey = _ref.dataKey,\n          other = _objectWithoutProperties(_ref, [\"cellContentRenderer\", \"className\", \"dataKey\"]);\n\n      let renderer;\n\n      if (cellContentRenderer != null) {\n        renderer = cellRendererProps => cellRenderer({\n          cellData: cellContentRenderer(cellRendererProps),\n          columnIndex: index\n        });\n      } else {\n        renderer = cellRenderer;\n      }\n\n      return React.createElement(Column, Object.assign({\n        key: dataKey,\n        headerRenderer: headerProps => headerRenderer(_objectSpread({}, headerProps, {\n          columnIndex: index\n        })),\n        className: classNames(classes.flexContainer, className),\n        cellRenderer: renderer,\n        dataKey: dataKey\n      }, other, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }));\n    })))\n  );\n}\n\nexport default ReactVirtualizedTable;\nMuiVirtualizedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    cellContentRenderer: PropTypes.func,\n    dataKey: PropTypes.string.isRequired,\n    width: PropTypes.number.isRequired\n  })).isRequired,\n  headerHeight: PropTypes.number,\n  onRowClick: PropTypes.func,\n  rowClassName: PropTypes.string,\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  sort: PropTypes.func\n};\nMuiVirtualizedTable.defaultProps = {\n  headerHeight: 56,\n  rowHeight: 56\n};\nconst WrappedVirtualizedTable = withStyles(styles)(MuiVirtualizedTable);","map":{"version":3,"sources":["/home/alireza/Documents/react/src/Components/IrisaComponents/MyGrid.js"],"names":["React","useState","PropTypes","classNames","withStyles","TableCell","TableSortLabel","Paper","AutoSizer","Column","SortDirection","Table","List","styles","theme","table","fontFamily","typography","flexContainer","display","alignItems","boxSizing","tableRow","cursor","tableRowHover","backgroundColor","palette","grey","tableCell","flex","noClick","ReactVirtualizedTable","props","classes","columns","tableProps","getRowClassName","index","rowClassName","onRowClick","cellRenderer","cellData","columnIndex","rowHeight","height","numeric","headerRenderer","label","dataKey","sortBy","sortDirection","headerHeight","sort","direction","ASC","DESC","inner","disableSort","width","map","cellContentRenderer","className","other","renderer","cellRendererProps","headerProps","MuiVirtualizedTable","propTypes","object","isRequired","arrayOf","shape","func","string","number","oneOfType","defaultProps","WrappedVirtualizedTable"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\n\nimport React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\nimport { AutoSizer, Column, SortDirection, Table,List } from 'react-virtualized';\n\nconst styles = theme => ({\n  table: {\n    fontFamily: theme.typography.fontFamily,\n  },\n  flexContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    boxSizing: 'border-box',\n  },\n  tableRow: {\n    cursor: 'pointer',\n  },\n  tableRowHover: {\n    '&:hover': {\n      backgroundColor: theme.palette.grey[200],\n    },\n  },\n  tableCell: {\n    flex: 1,\n  },\n  noClick: {\n    cursor: 'initial',\n  },\n});\n\nfunction ReactVirtualizedTable(props) {\n  \n  const { classes, columns, ...tableProps } = props;\n\n  //const [width,setWidth] = useState(400)\n  //const [height,setHeight] = useState(400)\n\n  const getRowClassName = ({ index }) => {\n    const { classes, rowClassName, onRowClick } = props;\n\n    return classNames(classes.tableRow, classes.flexContainer, rowClassName, {\n      [classes.tableRowHover]: index !== -1 && onRowClick != null,\n    });\n  };\n\n  const cellRenderer = ({ cellData, columnIndex = null }) => {\n    const { columns, classes, rowHeight, onRowClick } = props;\n    return (\n      <TableCell\n        component=\"div\"\n        className={classNames(classes.tableCell, classes.flexContainer, {\n          [classes.noClick]: onRowClick == null,\n        })}\n        variant=\"body\"\n        style={{ height: rowHeight }}\n        align={(columnIndex != null && columns[columnIndex].numeric) || false ? 'right' : 'left'}\n      >\n        {cellData}\n      </TableCell>\n    );\n  };\n\n  const headerRenderer = ({ label, columnIndex, dataKey, sortBy, sortDirection }) => {\n    const { headerHeight, columns, classes, sort } = props;\n    const direction = {\n      [SortDirection.ASC]: 'asc',\n      [SortDirection.DESC]: 'desc',\n    };\n\n    const inner =\n      !columns[columnIndex].disableSort && sort != null ? (\n        <TableSortLabel active={dataKey === sortBy} direction={direction[sortDirection]}>\n          {label}\n        </TableSortLabel>\n      ) : (\n        label\n      );\n\n    return (\n      <TableCell\n        component=\"div\"\n        className={classNames(classes.tableCell, classes.flexContainer, classes.noClick)}\n        variant=\"head\"\n        style={{ height: headerHeight }}\n        align={columns[columnIndex].numeric || false ? 'right' : 'left'}\n      >\n        {inner}\n      </TableCell>\n    );\n  };\n\n\n\n  return (\n    // <ul>\n    //   {\n    //     [...Array(1000000).keys()].map(item=>(\n    //       <li key={item}>Row {item}</li>\n    //     ))\n    //   }\n    // </ul>\n    <AutoSizer>\n      {\n        ({height,width})=>(\n          <Table\n          className={classes.table}\n          height={height}\n          width={width}\n          {...tableProps}\n          rowClassName={getRowClassName}\n          >\n            {columns.map(({ cellContentRenderer = null, className, dataKey, ...other }, index) => {\n              let renderer;\n              if (cellContentRenderer != null) {\n                renderer = cellRendererProps =>\n                  cellRenderer({\n                    cellData: cellContentRenderer(cellRendererProps),\n                    columnIndex: index,\n                  });\n              } else {\n                renderer = cellRenderer;\n              }\n\n              return (\n                <Column\n                  key={dataKey}\n                  headerRenderer={headerProps =>\n                    headerRenderer({\n                      ...headerProps,\n                      columnIndex: index,\n                    })\n                  }\n                  className={classNames(classes.flexContainer, className)}\n                  cellRenderer={renderer}\n                  dataKey={dataKey}\n                  {...other}\n                />\n              );\n            })}\n          </Table>\n        )\n      }\n    </AutoSizer>\n  );\n}\n\nexport default ReactVirtualizedTable;\nMuiVirtualizedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      cellContentRenderer: PropTypes.func,\n      dataKey: PropTypes.string.isRequired,\n      width: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  headerHeight: PropTypes.number,\n  onRowClick: PropTypes.func,\n  rowClassName: PropTypes.string,\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  sort: PropTypes.func,\n};\n\nMuiVirtualizedTable.defaultProps = {\n  headerHeight: 56,\n  rowHeight: 56,\n};\n\nconst WrappedVirtualizedTable = withStyles(styles)(MuiVirtualizedTable);"]},"metadata":{},"sourceType":"module"}