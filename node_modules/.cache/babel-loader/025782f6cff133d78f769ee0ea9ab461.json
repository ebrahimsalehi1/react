{"ast":null,"code":"import { __extends } from 'tslib';\nimport jMoment from 'moment-jalaali';\nimport DefaultMomentUtils from '@date-io/moment';\nvar symbolMap = {\n  1: \"۱\",\n  2: \"۲\",\n  3: \"۳\",\n  4: \"۴\",\n  5: \"۵\",\n  6: \"۶\",\n  7: \"۷\",\n  8: \"۸\",\n  9: \"۹\",\n  0: \"۰\"\n};\n\nvar MomentUtils =\n/** @class */\nfunction (_super) {\n  __extends(MomentUtils, _super);\n\n  function MomentUtils(_a) {\n    var _b = _a === void 0 ? {} : _a,\n        moment = _b.moment,\n        instance = _b.instance;\n\n    var _this = _super.call(this, {\n      locale: \"fa\",\n      moment: moment\n    }) || this;\n\n    _this.dateTime12hFormat = \"jMMMM jD hh:mm a\";\n    _this.dateTime24hFormat = \"jMMMM jD HH:mm\";\n    _this.time12hFormat = \"hh:mm A\";\n    _this.time24hFormat = \"HH:mm\";\n    _this.dateFormat = \"jMMMM jD\";\n    _this.moment = instance || moment || jMoment;\n    _this.locale = \"fa\";\n    return _this;\n  }\n\n  MomentUtils.prototype.toJMoment = function (date) {\n    return this.moment(date ? date.clone() : undefined).locale(\"fa\");\n  };\n\n  MomentUtils.prototype.parse = function (value, format) {\n    if (value === \"\") {\n      return null;\n    }\n\n    return this.moment(value, format, true).locale(\"fa\");\n  };\n\n  MomentUtils.prototype.date = function (value) {\n    if (value === null) {\n      return null;\n    }\n\n    return this.moment(value).locale(\"fa\");\n  };\n\n  MomentUtils.prototype.isBeforeYear = function (date, value) {\n    return date.jYear() < value.jYear();\n  };\n\n  MomentUtils.prototype.isAfterYear = function (date, value) {\n    return date.jYear() > value.jYear();\n  };\n\n  MomentUtils.prototype.getMonth = function (date) {\n    return date.jMonth();\n  };\n\n  MomentUtils.prototype.startOfMonth = function (date) {\n    return date.clone().startOf(\"jMonth\");\n  };\n\n  MomentUtils.prototype.endOfMonth = function (date) {\n    return date.clone().endOf(\"jMonth\");\n  };\n\n  MomentUtils.prototype.getNextMonth = function (date) {\n    return date.clone().add(1, \"jMonth\");\n  };\n\n  MomentUtils.prototype.getPreviousMonth = function (date) {\n    return date.clone().subtract(1, \"jMonth\");\n  };\n\n  MomentUtils.prototype.getYear = function (date) {\n    return date.jYear();\n  };\n\n  MomentUtils.prototype.setYear = function (date, year) {\n    return date.clone().jYear(year);\n  };\n\n  MomentUtils.prototype.getMeridiemText = function (ampm) {\n    return ampm === \"am\" ? this.toJMoment().hours(2).format(\"A\") : this.toJMoment().hours(14).format(\"A\");\n  };\n\n  MomentUtils.prototype.getWeekdays = function () {\n    var _this = this;\n\n    return [0, 1, 2, 3, 4, 5, 6].map(function (dayOfWeek) {\n      return _this.toJMoment().weekday(dayOfWeek).format(\"dd\");\n    });\n  };\n\n  MomentUtils.prototype.isEqual = function (value, comparing) {\n    if (value === null && comparing === null) {\n      return true;\n    }\n\n    return this.moment(value).isSame(comparing);\n  };\n\n  MomentUtils.prototype.formatNumber = function (num) {\n    return num.replace(/\\d/g, function (match) {\n      return symbolMap[match];\n    }).replace(/,/g, \"،\");\n  };\n\n  MomentUtils.prototype.getWeekArray = function (date) {\n    var start = date.clone().startOf(\"jMonth\").startOf(\"week\");\n    var end = date.clone().endOf(\"jMonth\").endOf(\"week\");\n    var count = 0;\n    var current = start;\n    var nestedWeeks = [];\n\n    while (current.isBefore(end)) {\n      var weekNumber = Math.floor(count / 7);\n      nestedWeeks[weekNumber] = nestedWeeks[weekNumber] || [];\n      nestedWeeks[weekNumber].push(current);\n      current = current.clone().add(1, \"day\");\n      count += 1;\n    }\n\n    return nestedWeeks;\n  };\n\n  MomentUtils.prototype.getYearRange = function (start, end) {\n    var startDate = this.moment(start).startOf(\"jYear\");\n    var endDate = this.moment(end).endOf(\"jYear\");\n    var years = [];\n    var current = startDate;\n\n    while (current.isBefore(endDate)) {\n      years.push(current);\n      current = current.clone().add(1, \"jYear\");\n    }\n\n    return years;\n  }; // displaying methods\n\n\n  MomentUtils.prototype.getCalendarHeaderText = function (date) {\n    return date.format(\"jMMMM jYYYY\");\n  };\n\n  MomentUtils.prototype.getYearText = function (date) {\n    return date.format(\"jYYYY\");\n  };\n\n  MomentUtils.prototype.getDatePickerHeaderText = function (date) {\n    return date.format(\"ddd, jMMM jD\");\n  };\n\n  MomentUtils.prototype.getDateTimePickerHeaderText = function (date) {\n    return date.format(\"jMMM jD\");\n  };\n\n  MomentUtils.prototype.getDayText = function (date) {\n    return date.format(\"jD\");\n  };\n\n  return MomentUtils;\n}(DefaultMomentUtils);\n\nexport default MomentUtils;","map":null,"metadata":{},"sourceType":"module"}