{"ast":null,"code":"import _slicedToArray from \"/home/alireza/Documents/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/alireza/Documents/react/src/App.js\";\nimport ReactVirtualizedTable from './Components/IrisaComponents/MyGrid';\nimport React, { memo, Component, useState, useEffect, useRef } from 'react';\nimport SortableTree from 'react-sortable-tree';\nimport 'react-sortable-tree/style.css'; // This only needs to be imported once in your app\n\nimport axios from 'axios';\nimport InfiniteSample from './Components/IrisaComponents/InfiniteSample';\nimport Sample from './Components/IrisaComponents/Sample1';\nimport { SelectValidator } from 'react-material-ui-form-validator';\nimport IrisaDateTime from './Components/IrisaComponents/IrisaDateTime';\nimport Moment from 'moment-jalaali';\n\nclass Tree extends Component {\n  constructor(props) {\n    super(props);\n\n    this.makeRandomData = () => {\n      const dataBase = [];\n    };\n\n    this.state = {\n      treeData: [{\n        title: \"A\",\n        children: [{\n          title: \"B\",\n          children: [{\n            title: \"C\",\n            children: [{\n              title: \"D\",\n              children: []\n            }, {\n              title: \"E\",\n              children: []\n            }]\n          }, {\n            title: \"F\",\n            children: []\n          }]\n        }, {\n          title: \"G\",\n          children: [{\n            title: \"H\",\n            children: []\n          }, {\n            title: \"I\",\n            children: []\n          }]\n        }]\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        height: 400\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(SortableTree, {\n      treeData: this.state.treeData,\n      onChange: treeData => this.setState({\n        treeData\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction App(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        dataRows = _useState2[0],\n        setDataRows = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        firstRendered = _useState4[0],\n        setFirstRendered = _useState4[1];\n\n  const num = useRef(0);\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        val = _useState6[0],\n        setVal = _useState6[1]; // useEffect(()=>{\n  // if(firstRendered){\n  //   axios.get('http://localhost:8081/').\n  //   then(res=>{\n  //     if(res.status===200){\n  //       setDataRows(res.data);\n  //       console.log('data',dataRows)\n  //     }\n  //     else{\n  //       alert('error in fetching the data')\n  //     }\n  //   })\n  //setFirstRendered(!firstRendered)\n  // }\n  // console.log('useEffect');\n  // if(firstRendered){\n  // console.log('start of ....');\n  // setFirstRendered(false);\n  // return ()=>{\n  //   setFirstRendered(false);\n  // }\n  // }\n  // })\n  // let x=''\n  // onChange={e=>setVal(e.target.value)}\n  // setTimeout(()=>{setVal(pval=>pval+1 )},5000);\n\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        a = _useState8[0],\n        setA = _useState8[1];\n\n  useEffect(() => {\n    setA(1); // return ()=>{\n    //   setA(1)\n    // }\n  }, []);\n  const persianMonths = [{\n    title: \"January\",\n    id: 1\n  }, {\n    title: \"February\",\n    id: 2\n  }, {\n    title: \"March\",\n    id: 3\n  }, {\n    title: \"April\",\n    id: 4\n  }, {\n    title: \"May\",\n    id: 5\n  }, {\n    title: \"June\",\n    id: 6\n  }, {\n    title: \"July\",\n    id: 7\n  }, {\n    title: \"August\",\n    id: 8\n  }, {\n    title: \"September\",\n    id: 9\n  }, {\n    title: \"October\",\n    id: 10\n  }, {\n    title: \"November\",\n    id: 11\n  }, {\n    title: \"December\",\n    id: 12\n  }];\n  console.log('component is running ...');\n  const calc = `${Moment().local('fa').format('jDD')}`;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"number : \", ++num.current), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, String(Moment().local('fa').format('DD'))), React.createElement(Tree, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }));\n}\n\nexport default memo(App);","map":{"version":3,"sources":["/home/alireza/Documents/react/src/App.js"],"names":["ReactVirtualizedTable","React","memo","Component","useState","useEffect","useRef","SortableTree","axios","InfiniteSample","Sample","SelectValidator","IrisaDateTime","Moment","Tree","constructor","props","makeRandomData","dataBase","state","treeData","title","children","render","height","setState","App","dataRows","setDataRows","firstRendered","setFirstRendered","num","val","setVal","a","setA","persianMonths","id","console","log","calc","local","format","current","String"],"mappings":"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","sourcesContent":["import ReactVirtualizedTable from './Components/IrisaComponents/MyGrid';\n\nimport React, { memo,Component,useState,useEffect,useRef } from 'react';\nimport SortableTree from 'react-sortable-tree';\nimport 'react-sortable-tree/style.css'; // This only needs to be imported once in your app\nimport axios from 'axios';\nimport InfiniteSample from './Components/IrisaComponents/InfiniteSample';\nimport Sample from './Components/IrisaComponents/Sample1';\nimport { SelectValidator } from 'react-material-ui-form-validator';\nimport IrisaDateTime from './Components/IrisaComponents/IrisaDateTime';\nimport Moment from 'moment-jalaali';\n\nclass Tree extends Component {\n  constructor(props) {\n    super(props);\n \n    this.state = {\n      treeData: [\n        {title:\"A\",children:[{title:\"B\",children:[{title:\"C\",children:[{title:\"D\",children:[]},{title:\"E\",children:[]}]},{title:\"F\",children:[]}]},{title:\"G\",children:[{title:\"H\",children:[]},{title:\"I\",children:[]}]}]}\n      ]\n    };\n  }\n\n  makeRandomData = ()=>{\n    const dataBase=[] \n  }\n \n  render() {\n    return (\n      <div style={{ height: 400 }}>\n        <SortableTree\n          treeData={this.state.treeData}\n          onChange={treeData => this.setState({ treeData })}\n        />\n      </div>\n    );\n  }\n}\n\nfunction App(props){\n\n  const [dataRows,setDataRows] = useState([]);\n  const [firstRendered,setFirstRendered] = useState(true);\n  const num = useRef(0);\n  const [val,setVal] = useState(0)\n\n  // useEffect(()=>{\n    // if(firstRendered){\n    //   axios.get('http://localhost:8081/').\n    //   then(res=>{\n    //     if(res.status===200){\n    //       setDataRows(res.data);\n    //       console.log('data',dataRows)\n    //     }\n    //     else{\n    //       alert('error in fetching the data')\n    //     }\n    //   })\n\n      //setFirstRendered(!firstRendered)\n    // }\n    // console.log('useEffect');\n    // if(firstRendered){\n      // console.log('start of ....');\n      // setFirstRendered(false);\n\n      // return ()=>{\n      //   setFirstRendered(false);\n      // }\n    // }\n  // })\n  // let x=''\n  // onChange={e=>setVal(e.target.value)}\n\n  // setTimeout(()=>{setVal(pval=>pval+1 )},5000);\n\n  const [a,setA] = useState(0);\n  useEffect(()=>{\n    setA(1)\n    // return ()=>{\n    //   setA(1)\n    // }\n  },[]);\n\n  const persianMonths = [\n    {title:\"January\",id:1},\n    {title:\"February\",id:2},\n    {title:\"March\",id:3},\n    {title:\"April\",id:4},\n    {title:\"May\",id:5},\n    {title:\"June\",id:6},\n    {title:\"July\",id:7},\n    {title:\"August\",id:8},\n    {title:\"September\",id:9},\n    {title:\"October\",id:10},\n    {title:\"November\",id:11},\n    {title:\"December\",id:12}\n]\n  console.log('component is running ...');\n  \n  const calc = `${Moment().local('fa').format('jDD')}`\n    return (\n        <div>\n          <label>number : {++num.current}</label>\n\n          <button>{String(Moment().local('fa').format('DD'))}</button>\n\n          {/* <input type='text' value={val}  /> */}\n            {/* <ReactVirtualizedTable \n            rows={dataRows}\n            columns={\n              [\n                {\n                  width: 200,\n                  flexGrow: 1.0,\n                  label: 'id',\n                  dataKey: 'id',\n                },\n                {\n                  width: 120,\n                  label: 'first name',\n                  dataKey: 'firstName',\n                  numeric: true,\n                },\n                {\n                  width: 120,\n                  label: 'last name',\n                  dataKey: 'lastName',\n                  numeric: true,\n                },\n                {\n                  width: 120,\n                  label: 'salary',\n                  dataKey: 'salary',\n                  numeric: true,\n                },\n              ]\n            }\n            /> */}\n\n            <Tree />\n\n            {/* <InfiniteSample /> */}\n{/* \n            <Sample /> */}\n            {/* <IrisaDateTime /> */}\n        </div>\n    )\n}\n\nexport default memo(App)\n"]},"metadata":{},"sourceType":"module"}