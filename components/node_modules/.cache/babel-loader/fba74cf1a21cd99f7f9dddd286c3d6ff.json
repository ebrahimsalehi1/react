{"ast":null,"code":"import _objectWithoutProperties from \"/home/alireza/project/irisa/components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/alireza/project/irisa/components/src/itcomponents/NewComp/IrisaSwitch.js\";\nimport React from 'react';\nimport { withStyles, Switch, FormControlLabel, Checkbox } from '@material-ui/core'; //import {styles} from '../../assets/jss/style'\n\nimport PropTypes from 'prop-types'; //export default withStyles(styles)(IbxSwitch);\n\nexport default IrisaSwitch;\n\nfunction IrisaSwitch(props) {\n  var classes = props.classes,\n      label = props.label,\n      value = props.value,\n      name = props.name,\n      checked = props.checked,\n      onChange = props.onChange,\n      other = _objectWithoutProperties(props, [\"classes\", \"label\", \"value\", \"name\", \"checked\", \"onChange\"]);\n\n  return React.createElement(Switch, {\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    value: value,\n    label: label // classes={{\n    //     switchBase: classes.colorSwitchBase,\n    //     checked: classes.colorChecked,\n    //     bar: classes.colorBar,\n    // }}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  });\n}\n\nIrisaSwitch.propTypes = {\n  //classes: PropTypes.object.isRequired,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.any,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func\n};","map":{"version":3,"sources":["/home/alireza/project/irisa/components/src/itcomponents/NewComp/IrisaSwitch.js"],"names":["React","withStyles","Switch","FormControlLabel","Checkbox","PropTypes","IrisaSwitch","props","classes","label","value","name","checked","onChange","other","propTypes","string","isRequired","any","bool","func"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,EAAoBC,MAApB,EAA4BC,gBAA5B,EAA8CC,QAA9C,QAA6D,mBAA7D,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,eAAgBC,WAAhB;;AAEA,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AAAA,MAEbC,OAFa,GAE+CD,KAF/C,CAEbC,OAFa;AAAA,MAEJC,KAFI,GAE+CF,KAF/C,CAEJE,KAFI;AAAA,MAEGC,KAFH,GAE+CH,KAF/C,CAEGG,KAFH;AAAA,MAEUC,IAFV,GAE+CJ,KAF/C,CAEUI,IAFV;AAAA,MAEgBC,OAFhB,GAE+CL,KAF/C,CAEgBK,OAFhB;AAAA,MAEyBC,QAFzB,GAE+CN,KAF/C,CAEyBM,QAFzB;AAAA,MAEsCC,KAFtC,4BAE+CP,KAF/C;;AAGpB,SACgB,oBAAC,MAAD;AACI,IAAA,IAAI,EAAEI,IADV;AAEI,IAAA,OAAO,EAAEC,OAFb;AAGI,IAAA,QAAQ,EAAEC,QAHd;AAII,IAAA,KAAK,EAAEH,KAJX;AAKI,IAAA,KAAK,EAAED,KALX,CAMI;AACA;AACA;AACA;AACA;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhB;AAcP;;AAEDH,WAAW,CAACS,SAAZ,GAAwB;AACpB;AACAJ,EAAAA,IAAI,EAAEN,SAAS,CAACW,MAAV,CAAiBC,UAFH;AAGpBR,EAAAA,KAAK,EAAEJ,SAAS,CAACW,MAAV,CAAiBC,UAHJ;AAIpBP,EAAAA,KAAK,EAAEL,SAAS,CAACa,GAJG;AAKpBN,EAAAA,OAAO,EAAEP,SAAS,CAACc,IALC;AAMpBN,EAAAA,QAAQ,EAAER,SAAS,CAACe;AANA,CAAxB","sourcesContent":["import React from 'react';\nimport {withStyles, Switch, FormControlLabel, Checkbox} from '@material-ui/core';\n//import {styles} from '../../assets/jss/style'\nimport PropTypes from 'prop-types';\n\n//export default withStyles(styles)(IbxSwitch);\nexport default (IrisaSwitch);\n\nfunction IrisaSwitch(props) {\n\n        const {classes, label, value, name, checked, onChange, ...other} = props;\n        return (\n                        <Switch\n                            name={name}\n                            checked={checked}\n                            onChange={onChange}\n                            value={value}\n                            label={label}\n                            // classes={{\n                            //     switchBase: classes.colorSwitchBase,\n                            //     checked: classes.colorChecked,\n                            //     bar: classes.colorBar,\n                            // }}\n                        />             \n        )    \n}\n\nIrisaSwitch.propTypes = {\n    //classes: PropTypes.object.isRequired,\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    value: PropTypes.any,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\n\n"]},"metadata":{},"sourceType":"module"}