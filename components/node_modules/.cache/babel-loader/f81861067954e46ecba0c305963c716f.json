{"ast":null,"code":"import _defineProperty from \"/home/alireza/project/irisa/components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/alireza/project/irisa/components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/alireza/project/irisa/components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/alireza/project/irisa/components/src/itcomponents/NewComp/SampleValidation.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nvar useStyles = function useStyles() {\n  return {\n    root: {\n      display: 'flex'\n    },\n    formControl: {\n      margin: 3 //theme.spacing(3),\n\n    }\n  };\n};\n\nexport default function CheckboxesGroup() {\n  var classes = useStyles();\n\n  var _React$useState = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setState(_objectSpread({}, state, _defineProperty({}, name, event.target.checked)));\n    };\n  };\n\n  var gilad = state.gilad,\n      jason = state.jason,\n      antoine = state.antoine;\n  var error = [gilad, jason, antoine].filter(function (v) {\n    return v;\n  }).length !== 2;\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    required: true,\n    error: true,\n    component: \"fieldset\",\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    component: \"legend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Pick two\"), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: gilad,\n      onChange: handleChange('gilad'),\n      value: \"gilad\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }),\n    label: \"Gilad Gray\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: jason,\n      onChange: handleChange('jason'),\n      value: \"jason\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }),\n    label: \"Jason Killian\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: antoine,\n      onChange: handleChange('antoine'),\n      value: \"antoine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }),\n    label: \"Antoine Llorca\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"You can display an error\"), React.createElement(InputLabel, {\n    value: 'my textfield',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/home/alireza/project/irisa/components/src/itcomponents/NewComp/SampleValidation.js"],"names":["React","makeStyles","FormLabel","FormControl","FormGroup","FormControlLabel","FormHelperText","Checkbox","TextField","InputLabel","useStyles","root","display","formControl","margin","CheckboxesGroup","classes","useState","gilad","jason","antoine","state","setState","handleChange","name","event","target","checked","error","filter","v","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField'\nimport InputLabel from '@material-ui/core/InputLabel'\n\nconst useStyles = () => ({\n  root: {\n    display: 'flex',\n  },\n  formControl: {\n    margin: 3, //theme.spacing(3),\n  },\n});\n\nexport default function CheckboxesGroup() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: false,\n  });\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  const { gilad, jason, antoine } = state;\n  const error = [gilad, jason, antoine].filter(v => v).length !== 2;\n\n  return (\n    <div className={classes.root}>\n      {/* <FormControl component=\"fieldset\" className={classes.formControl}>\n        <FormLabel component=\"legend\">Assign responsibility</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={<Checkbox checked={gilad} onChange={handleChange('gilad')} value=\"gilad\" />}\n            label=\"Gilad Gray\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={jason} onChange={handleChange('jason')} value=\"jason\" />}\n            label=\"Jason Killian\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox checked={antoine} onChange={handleChange('antoine')} value=\"antoine\" />\n            }\n            label=\"Antoine Llorca\"\n          />\n        </FormGroup>\n        <FormHelperText>Be careful</FormHelperText>\n      </FormControl> */}\n\n      <FormControl required error={true} component=\"fieldset\" className={classes.formControl}>\n        <FormLabel component=\"legend\">Pick two</FormLabel>\n        <FormGroup >\n          <FormControlLabel\n            control={<Checkbox checked={gilad} onChange={handleChange('gilad')} value=\"gilad\" />}\n            label=\"Gilad Gray\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={jason} onChange={handleChange('jason')} value=\"jason\" />}\n            label=\"Jason Killian\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox checked={antoine} onChange={handleChange('antoine')} value=\"antoine\" />\n            }\n            label=\"Antoine Llorca\"\n          />\n        </FormGroup>\n        <FormHelperText>You can display an error</FormHelperText>\n        <InputLabel value={'my textfield'}/>\n      </FormControl>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}