{"ast":null,"code":"import _defineProperty from \"/home/alireza/project/irisa/components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/alireza/project/irisa/components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/alireza/project/irisa/components/src/App.js\";\nimport ReactDOM from \"react-dom\";\nimport React, { useState } from \"react\"; //import Typography from \"@material-ui/core/Typography\";\n\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { isValid, format, isSameDay, startOfWeek, endOfWeek, isWithinInterval } from //eachDayOfInterval\n\"date-fns\";\nimport { DatePicker, MuiPickersUtilsProvider, TimePickerView, Calendar } from \"material-ui-pickers\";\nimport { IconButton, withStyles } from \"@material-ui/core\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport JalaliUtils from \"@date-io/jalaali\";\nimport { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\"; //import { endOfDay } from \"date-fns/esm/fp\";\n//import { cloneCrossUtils } from \"utils\";\n//import MomentUtils from '@date-io/moment';\n\nimport { eachDayOfInterval } from 'date-fns';\n\nvar styles = function styles(theme) {\n  return {\n    dayWrapper: {\n      position: \"relative\"\n    },\n    day: {\n      width: 36,\n      height: 36,\n      fontSize: theme.typography.caption.fontSize,\n      margin: \"0 2px\",\n      color: \"inherit\"\n    },\n    customDayHighlight: {\n      position: \"absolute\",\n      top: 0,\n      bottom: 0,\n      left: \"2px\",\n      right: \"2px\",\n      border: \"1px solid \".concat(theme.palette.secondary.main),\n      borderRadius: \"50%\"\n    },\n    nonCurrentMonthDay: {\n      color: theme.palette.text.disabled\n    },\n    highlightNonCurrentMonthDay: {\n      color: \"#676767\"\n    },\n    highlight: {\n      background: theme.palette.primary.main,\n      color: theme.palette.common.white\n    },\n    firstHighlight: {\n      extend: \"highlight\",\n      borderTopLeftRadius: \"50%\",\n      borderBottomLeftRadius: \"50%\"\n    },\n    endHighlight: {\n      extend: \"highlight\",\n      borderTopRightRadius: \"50%\",\n      borderBottomRightRadius: \"50%\"\n    }\n  };\n};\n\nfunction App(props) {\n  /*\n    const dt = new Date('2019/08/07')\n    const start = startOfWeek(dt)\n    const end = endOfWeek(dt)\n    let cloneDate=null\n    */\n  //let theme = createMuiTheme();\n  var theme = createMuiTheme({\n    typography: {\n      useNextVariants: true\n    }\n  }); //theme = responsiveFontSizes(theme);\n  //console.log(theme.typography.caption.fontSize)\n  //const classes = styles(theme);\n\n  var classes = styles(theme); //console.log(\"classes--->\", classes);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      chk = _useState2[0],\n      setChk = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      startDate = _useState4[0],\n      setStartDate = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      endDate = _useState6[0],\n      setEndDate = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      nchange = _useState8[0],\n      setNchange = _useState8[1];\n\n  function cloneCrossUtils(dat) {\n    return dat;\n  }\n\n  var formatWeekSelectLabel = function formatWeekSelectLabel(date, invalidLabel) {\n    console.log(\"formatWeekSelectLabel --> start\");\n    var dateClone = cloneCrossUtils(date);\n    return dateClone && isValid(dateClone) ? \"Week of \".concat(format(startOfWeek(dateClone), \"MMM do\")) : invalidLabel;\n  };\n\n  var renderWrappedWeekDay = function renderWrappedWeekDay(date, selectedDate, dayInCurrentMonth, dayComponent) {\n    var _clsx, _clsx2;\n\n    var dateClone = cloneCrossUtils(date);\n    var selectedDateClone = cloneCrossUtils(selectedDate);\n    var start = startOfWeek(selectedDateClone);\n    var end = endOfWeek(selectedDateClone);\n    var dayIsBetween = true; //isWithinInterval(dateClone, { start, end });\n\n    var isFirstDay = isSameDay(dateClone, start);\n    var isLastDay = isSameDay(dateClone, end); //console.log(\"renderWrappedWeekDay ---> start\");\n\n    var wrapperClassName = clsx((_clsx = {}, _defineProperty(_clsx, classes.highlight, dayIsBetween), _defineProperty(_clsx, classes.firstHighlight, isFirstDay), _defineProperty(_clsx, classes.endHighlight, isLastDay), _clsx));\n    console.log(\"wrapperClassName ---> \", wrapperClassName);\n    var dayClassName = clsx(classes.day, (_clsx2 = {}, _defineProperty(_clsx2, classes.nonCurrentMonthDay, !dayInCurrentMonth), _defineProperty(_clsx2, classes.highlightNonCurrentMonthDay, !dayInCurrentMonth && dayIsBetween), _clsx2));\n    return React.createElement(\"div\", {\n      className: wrapperClassName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      className: dayClassName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \" \", dayComponent, \" \")));\n  };\n\n  function newRenderDay(date, selectedDate, dayInCurrentMonth, dayComponent) {\n    //const mdays = eachDayOfInterval({start:startDate,end:endDate})\n    var mdays = [new Date(2019, 8, 9), new Date(2019, 8, 10), new Date(2018, 8, 11), new Date(2018, 8, 12)];\n    console.log('new render day', dayComponent.props.children);\n    return React.createElement(\"div\", {\n      className: classes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, dayComponent.props.children == 3 || dayComponent.props.children == 5 ? React.createElement(\"span\", {\n      style: {\n        background: '#ff0099'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, dayComponent) : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, dayComponent) //            mdays.reduce((s,itm)=>{return dayComponent.props.children===format(itm,'d') && (s || itm)},false) ?\n    //                <span>{dayComponent}</span> : <span style={{background:'#ff0099'}} >{dayComponent}</span>\n    );\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    checked: chk,\n    onChange: function onChange(e) {\n      return setChk(e.target.checked);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }), React.createElement(MuiPickersUtilsProvider, {\n    utils: JalaliUtils,\n    local: \"fa\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, \"Number of changes : \", nchange, \"- from: \", String(format(startDate, 'YYYY-MM-DD')), \"- to: \", String(format(endDate, 'YYYY-MM-DD'))), React.createElement(DatePicker, {\n    renderDay: chk ? newRenderDay : null //labelFunc={chk ? formatWeekSelectLabel : null}\n    //labelFunc={date => (date ? date.format(\"jYYYY/jMM/jDD hh:mm A\") : \"\")}\n    ,\n    onChange: function onChange(e) {\n      //console.log(\"inside\",e);\n      setNchange(nchange + 1);\n\n      if (nchange % 2 === 1) {\n        setStartDate(e._d);\n      } else {\n        setEndDate(e._d);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  })));\n}\n\nexport default App; //ReactDOM.render(<App />, document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/alireza/project/irisa/components/src/App.js"],"names":["ReactDOM","React","useState","PropTypes","clsx","isValid","format","isSameDay","startOfWeek","endOfWeek","isWithinInterval","DatePicker","MuiPickersUtilsProvider","TimePickerView","Calendar","IconButton","withStyles","DateFnsUtils","JalaliUtils","createMuiTheme","responsiveFontSizes","Checkbox","eachDayOfInterval","styles","theme","dayWrapper","position","day","width","height","fontSize","typography","caption","margin","color","customDayHighlight","top","bottom","left","right","border","palette","secondary","main","borderRadius","nonCurrentMonthDay","text","disabled","highlightNonCurrentMonthDay","highlight","background","primary","common","white","firstHighlight","extend","borderTopLeftRadius","borderBottomLeftRadius","endHighlight","borderTopRightRadius","borderBottomRightRadius","App","props","useNextVariants","classes","chk","setChk","startDate","setStartDate","endDate","setEndDate","nchange","setNchange","cloneCrossUtils","dat","formatWeekSelectLabel","date","invalidLabel","console","log","dateClone","renderWrappedWeekDay","selectedDate","dayInCurrentMonth","dayComponent","selectedDateClone","start","end","dayIsBetween","isFirstDay","isLastDay","wrapperClassName","dayClassName","newRenderDay","mdays","Date","children","e","target","checked","String","_d"],"mappings":"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","sourcesContent":["import ReactDOM from \"react-dom\";\nimport React, { useState } from \"react\";\n//import Typography from \"@material-ui/core/Typography\";\n\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\n\nimport {\n  isValid,\n  format,\n  isSameDay,\n  startOfWeek,\n  endOfWeek,\n  isWithinInterval,\n  //eachDayOfInterval\n} from \"date-fns\";\n\nimport {\n  DatePicker,\n  MuiPickersUtilsProvider,\n  TimePickerView,\n  Calendar\n} from \"material-ui-pickers\";\nimport { IconButton, withStyles } from \"@material-ui/core\";\n\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport JalaliUtils from \"@date-io/jalaali\";\nimport { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n//import { endOfDay } from \"date-fns/esm/fp\";\n\n//import { cloneCrossUtils } from \"utils\";\n//import MomentUtils from '@date-io/moment';\n\nimport { eachDayOfInterval } from 'date-fns';\n\nconst styles = theme => ({\n  dayWrapper: {\n    position: \"relative\"\n  },\n  day: {\n    width: 36,\n    height: 36,\n    fontSize: theme.typography.caption.fontSize,\n    margin: \"0 2px\",\n    color: \"inherit\"\n  },\n  customDayHighlight: {\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    left: \"2px\",\n    right: \"2px\",\n    border: `1px solid ${theme.palette.secondary.main}`,\n    borderRadius: \"50%\"\n  },\n  nonCurrentMonthDay: {\n    color: theme.palette.text.disabled\n  },\n  highlightNonCurrentMonthDay: {\n    color: \"#676767\"\n  },\n  highlight: {\n    background: theme.palette.primary.main,\n    color: theme.palette.common.white\n  },\n  firstHighlight: {\n    extend: \"highlight\",\n    borderTopLeftRadius: \"50%\",\n    borderBottomLeftRadius: \"50%\"\n  },\n  endHighlight: {\n    extend: \"highlight\",\n    borderTopRightRadius: \"50%\",\n    borderBottomRightRadius: \"50%\"\n  }\n});\n\nfunction App(props) {\n  /*\n    const dt = new Date('2019/08/07')\n    const start = startOfWeek(dt)\n    const end = endOfWeek(dt)\n    let cloneDate=null\n    */\n\n  //let theme = createMuiTheme();\n\n  const theme = createMuiTheme({\n    typography: {\n      useNextVariants: true,\n    },\n  });  \n\n  //theme = responsiveFontSizes(theme);\n  //console.log(theme.typography.caption.fontSize)\n  //const classes = styles(theme);\n\n  const classes = styles(theme);\n\n  //console.log(\"classes--->\", classes);\n\n  const [chk, setChk] = useState(false);\n  const [startDate,setStartDate] = useState(null)\n  const [endDate,setEndDate] = useState(null)\n  const [nchange,setNchange] = useState(0)\n  function cloneCrossUtils(dat) {\n    return dat;\n  }\n\n  const formatWeekSelectLabel = (date, invalidLabel) => {\n    console.log(\"formatWeekSelectLabel --> start\");\n    let dateClone = cloneCrossUtils(date);\n\n    return dateClone && isValid(dateClone)\n      ? `Week of ${format(startOfWeek(dateClone), \"MMM do\")}`\n      : invalidLabel;\n  };\n\n  const renderWrappedWeekDay = (date, selectedDate, dayInCurrentMonth,dayComponent) => {\n    let dateClone = cloneCrossUtils(date);\n    let selectedDateClone = cloneCrossUtils(selectedDate);\n\n    const start = startOfWeek(selectedDateClone);\n    const end = endOfWeek(selectedDateClone);\n\n    const dayIsBetween = true//isWithinInterval(dateClone, { start, end });\n    const isFirstDay = isSameDay(dateClone, start);\n    const isLastDay = isSameDay(dateClone, end);\n\n    //console.log(\"renderWrappedWeekDay ---> start\");\n\n    const wrapperClassName = clsx({\n      [classes.highlight]: dayIsBetween,\n      [classes.firstHighlight]: isFirstDay,\n      [classes.endHighlight]: isLastDay\n    });\n    console.log(\"wrapperClassName ---> \",wrapperClassName);\n\n    const dayClassName = clsx(classes.day, {\n      [classes.nonCurrentMonthDay]: !dayInCurrentMonth,\n      [classes.highlightNonCurrentMonthDay]: !dayInCurrentMonth && dayIsBetween\n    });\n\n\n    return (\n      <div className={wrapperClassName}>\n        <IconButton className={dayClassName}>\n          <span> {dayComponent} </span>\n        </IconButton>\n      </div>\n    );\n  };\n\n  function newRenderDay(date, selectedDate, dayInCurrentMonth,dayComponent) {\n    //const mdays = eachDayOfInterval({start:startDate,end:endDate})\n    const mdays = [\n        new Date(2019,8,9),\n        new Date(2019,8,10),\n        new Date(2018,8,11),\n        new Date(2018,8,12)\n    ]\n\n    console.log('new render day',dayComponent.props.children)\n\n    return (\n    <div className={classes}>\n        {\n            (dayComponent.props.children==3 || dayComponent.props.children==5) ?\n            <span style={{background:'#ff0099'}} >{dayComponent}</span>  :\n            <span>{dayComponent}</span>                       \n            \n//            mdays.reduce((s,itm)=>{return dayComponent.props.children===format(itm,'d') && (s || itm)},false) ?\n//                <span>{dayComponent}</span> : <span style={{background:'#ff0099'}} >{dayComponent}</span>\n\n        }\n    </div>);\n  }\n\n  return (\n    <div>\n      <Checkbox checked={chk} onChange={e => setChk(e.target.checked)} />\n      <br />\n      <MuiPickersUtilsProvider utils={JalaliUtils} local={\"fa\"}>\n      <p>Number of changes : {nchange}  \n                  - from: {String(format(startDate,'YYYY-MM-DD'))} \n                  - to: {String(format(endDate,'YYYY-MM-DD'))}</p>        \n        <DatePicker          \n          renderDay={chk ? newRenderDay : null}\n          //labelFunc={chk ? formatWeekSelectLabel : null}\n          //labelFunc={date => (date ? date.format(\"jYYYY/jMM/jDD hh:mm A\") : \"\")}\n\n          onChange={e=>{\n            //console.log(\"inside\",e);\n            setNchange(nchange+1)\n            if(nchange%2===1){\n              setStartDate(e._d)\n            }\n            else{\n              setEndDate(e._d)\n            }\n          }}\n        />\n      </MuiPickersUtilsProvider>\n    </div>\n  );\n}\n\nexport default App;\n\n//ReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}