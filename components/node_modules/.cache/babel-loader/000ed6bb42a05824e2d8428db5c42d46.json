{"ast":null,"code":"import _toConsumableArray from \"/home/alireza/project/irisa/components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/alireza/project/irisa/components/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/alireza/project/irisa/components/src/itcomponents/NewComp/IrisaLov.js\";\nimport React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField'; // import { makeStyles } from '@material-ui/core/styles';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PropTypes from 'prop-types';\nimport { FindInPage, Close } from '@material-ui/icons';\nimport { DialogActions } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from '@material-ui/core/Input';\nimport Checkbox from '@material-ui/core/Checkbox'; // const useStyles = makeStyles(theme => ({\n//     root: {\n//       display: 'flex',\n//       flexWrap: 'wrap',\n//     },\n//     margin: {\n//       margin: theme.spacing(1),\n//     },\n//     withoutLabel: {\n//       marginTop: theme.spacing(3),\n//     },\n//     textField: {\n//       flexBasis: 200,\n//     },\n//   }));\n\nexport default function IrisaLov(props) {\n  var id = props.id,\n      name = props.name,\n      label = props.label,\n      datas = props.datas,\n      webElement = props.webElement,\n      keyCodeToFire = props.keyCodeToFire,\n      hotSearch = props.hotSearch;\n\n  var _useStyles = useStyles(),\n      classes = _useStyles.classes;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _useState = useState({\n    cod: '',\n    val: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      val = _useState2[0],\n      setVal = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchVal = _useState4[0],\n      setSearchVal = _useState4[1];\n\n  var _useState5 = useState([{\n    cod: '',\n    val: '%'\n  }].concat(_toConsumableArray(datas))),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dataSearch = _useState6[0],\n      setDataSearch = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectData = _useState8[0],\n      setSelectData = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectPagination = _useState10[0],\n      setSelectPagination = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      dataMultiSelect = _useState12[0],\n      setDataMultiSelect = _useState12[1];\n\n  function onHandlerClickItem(element) {\n    console.log(element);\n    setVal(element);\n  }\n\n  function onHandlerClickSearch() {\n    if (searchVal === '%') setSearchVal('');\n    if (searchVal === '%' || searchVal.length === 0) setDataSearch([{\n      cod: '',\n      val: '%'\n    }].concat(_toConsumableArray(datas)));else setDataSearch([{\n      cod: '',\n      val: '%'\n    }].concat(_toConsumableArray(datas)).filter(function (el) {\n      return el.val.startsWith(searchVal);\n    }));\n  }\n\n  useEffect(function () {\n    if (typeof hotSearch !== 'undefined' && hotSearch) onHandlerClickSearch();\n  }, [searchVal]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \" \", webElement.includes('popup') ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: id,\n    name: name,\n    className: classes,\n    variant: \"outlined\",\n    label: label,\n    fullWidth: true,\n    value: val.val === '%' ? '' : val.val,\n    onKeyDown: function onKeyDown(e) {\n      console.log(e.keyCode);\n      e.keyCode === keyCodeToFire ? setOpen(true) : setOpen(false);\n    },\n    onChange: function onChange(e) {\n      setVal(e.target.value);\n    },\n    helperText: val === '' ? 'Required' : '',\n    InputProps: {\n      endAdornment: React.createElement(IconButton, {\n        position: \"end\",\n        onClick: function onClick() {\n          return setOpen(true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(FindInPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(Dialog, {\n    open: open,\n    disableBackdropClick: false,\n    disableEscapeKeyDown: false,\n    fullWidth: true,\n    \"aria-labelledby\": \"confirmation-dialog-title\",\n    onKeyDown: function onKeyDown(e) {\n      e.keyCode === 27 ? setOpen(false) : setOpen(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    disableTypography: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"dialog title ....\")), React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    position: \"end\",\n    onClick: function onClick() {\n      return setOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Close, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }))))), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    value: searchVal,\n    onChange: function onChange(e) {\n      setSearchVal(e.target.value);\n    },\n    onKeyDown: function onKeyDown(e) {\n      if (e.keyCode === 13) onHandlerClickSearch();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: function onClick() {\n      onHandlerClickSearch();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Search\"))), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, dataSearch.map(function (element) {\n    return React.createElement(ListItem, {\n      button: true,\n      autoFocus: true,\n      divider: true,\n      key: element.cod,\n      onClick: function onClick() {\n        onHandlerClickItem(element);\n        setOpen(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \" \", element.val);\n  })), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(Select, {\n    value: selectPagination,\n    onChange: function onChange(e) {\n      return setSelectPagination(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, datas.map(function (element) {\n    return React.createElement(\"option\", {\n      key: element.cod,\n      value: element.cod,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, element.cod);\n  })))))) : webElement.includes('list') ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(Select, {\n    displayEmpty: true,\n    fullWidth: true,\n    value: selectData,\n    onChange: function onChange(e) {\n      setSelectData(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, dataSearch.map(function (element) {\n    return React.createElement(MenuItem, {\n      key: element.cod,\n      value: element.cod,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, element.val);\n  }))) : webElement.includes('multiple') ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(Select, {\n    multiple: true,\n    fullWidth: true,\n    input: React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }),\n    value: dataMultiSelect,\n    onChange: function onChange(e) {\n      return setDataMultiSelect(e.target.value);\n    },\n    renderValue: function renderValue(selected) {\n      return selected.join(',');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, dataSearch.map(function (element) {\n    return React.createElement(MenuItem, {\n      key: element.cod,\n      value: element.val,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: dataMultiSelect.indexOf(element.val) > -1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(ListItemText, {\n      primary: element.val,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }));\n  }))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"others\"));\n}\nIrisaLov.propTypes = {\n  columns: PropTypes.array,\n  webElement: PropTypes.oneOf([\"\", \"list\", \"popup\", \"multiple\"]),\n  label: PropTypes.string,\n  datas: PropTypes.array\n};","map":{"version":3,"sources":["/home/alireza/project/irisa/components/src/itcomponents/NewComp/IrisaLov.js"],"names":["React","useState","useEffect","TextField","IconButton","Dialog","DialogTitle","DialogContent","Button","List","ListItem","ListItemText","PropTypes","FindInPage","Close","DialogActions","Grid","Select","MenuItem","Input","Checkbox","IrisaLov","props","id","name","label","datas","webElement","keyCodeToFire","hotSearch","useStyles","classes","open","setOpen","cod","val","setVal","searchVal","setSearchVal","dataSearch","setDataSearch","selectData","setSelectData","selectPagination","setSelectPagination","dataMultiSelect","setDataMultiSelect","onHandlerClickItem","element","console","log","onHandlerClickSearch","length","filter","el","startsWith","includes","e","keyCode","target","value","endAdornment","map","selected","join","indexOf","propTypes","columns","array","oneOf","string"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,SAAP,MAAsB,6BAAtB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,UAAR,EAAmBC,KAAnB,QAA+B,oBAA/B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAAA,MAE5BC,EAF4B,GAE8BD,KAF9B,CAE5BC,EAF4B;AAAA,MAEzBC,IAFyB,GAE8BF,KAF9B,CAEzBE,IAFyB;AAAA,MAEpBC,KAFoB,GAE8BH,KAF9B,CAEpBG,KAFoB;AAAA,MAEdC,KAFc,GAE8BJ,KAF9B,CAEdI,KAFc;AAAA,MAERC,UAFQ,GAE8BL,KAF9B,CAERK,UAFQ;AAAA,MAEGC,aAFH,GAE8BN,KAF9B,CAEGM,aAFH;AAAA,MAEiBC,SAFjB,GAE8BP,KAF9B,CAEiBO,SAFjB;;AAAA,mBAIjBC,SAAS,EAJQ;AAAA,MAI5BC,OAJ4B,cAI5BA,OAJ4B;;AAAA,wBAMZ/B,KAAK,CAACC,QAAN,CAAe,KAAf,CANY;AAAA;AAAA,MAM5B+B,IAN4B;AAAA,MAMvBC,OANuB;;AAAA,kBAOdhC,QAAQ,CAAC;AAACiC,IAAAA,GAAG,EAAC,EAAL;AAAQC,IAAAA,GAAG,EAAC;AAAZ,GAAD,CAPM;AAAA;AAAA,MAO5BA,GAP4B;AAAA,MAOxBC,MAPwB;;AAAA,mBAQFnC,QAAQ,CAAC,EAAD,CARN;AAAA;AAAA,MAQ5BoC,SAR4B;AAAA,MAQlBC,YARkB;;AAAA,mBASArC,QAAQ,EAAE;AAACiC,IAAAA,GAAG,EAAC,EAAL;AAAQC,IAAAA,GAAG,EAAC;AAAZ,GAAF,4BAAuBT,KAAvB,GATR;AAAA;AAAA,MAS5Ba,UAT4B;AAAA,MASjBC,aATiB;;AAAA,mBAWAvC,QAAQ,CAAC,EAAD,CAXR;AAAA;AAAA,MAW5BwC,UAX4B;AAAA,MAWjBC,aAXiB;;AAAA,mBAYYzC,QAAQ,CAAC,EAAD,CAZpB;AAAA;AAAA,MAY5B0C,gBAZ4B;AAAA,MAYXC,mBAZW;;AAAA,oBAaU3C,QAAQ,CAAC,EAAD,CAblB;AAAA;AAAA,MAa5B4C,eAb4B;AAAA,MAaZC,kBAbY;;AAenC,WAASC,kBAAT,CAA4BC,OAA5B,EAAoC;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAZ,IAAAA,MAAM,CAACY,OAAD,CAAN;AACH;;AAED,WAASG,oBAAT,GAA+B;AAE3B,QAAGd,SAAS,KAAG,GAAf,EACKC,YAAY,CAAC,EAAD,CAAZ;AAGL,QAAGD,SAAS,KAAG,GAAZ,IAAmBA,SAAS,CAACe,MAAV,KAAqB,CAA3C,EACIZ,aAAa,EAAE;AAACN,MAAAA,GAAG,EAAC,EAAL;AAAQC,MAAAA,GAAG,EAAC;AAAZ,KAAF,4BAAuBT,KAAvB,GAAb,CADJ,KAGIc,aAAa,CAAC,CAAC;AAACN,MAAAA,GAAG,EAAC,EAAL;AAAQC,MAAAA,GAAG,EAAC;AAAZ,KAAD,4BAAsBT,KAAtB,GAA6B2B,MAA7B,CAAoC,UAAAC,EAAE;AAAA,aAAEA,EAAE,CAACnB,GAAH,CAAOoB,UAAP,CAAkBlB,SAAlB,CAAF;AAAA,KAAtC,CAAD,CAAb;AAEP;;AAEDnC,EAAAA,SAAS,CAAC,YAAI;AACV,QAAG,OAAO2B,SAAP,KAAmB,WAAnB,IAAkCA,SAArC,EACIsB,oBAAoB;AAC3B,GAHQ,EAGP,CAACd,SAAD,CAHO,CAAT;AAKA,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACIV,UAAU,CAAC6B,QAAX,CAAoB,OAApB,IACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,SAAD;AACA,IAAA,EAAE,EAAEjC,EADJ;AAEA,IAAA,IAAI,EAAEC,IAFN;AAGA,IAAA,SAAS,EAAEO,OAHX;AAIA,IAAA,OAAO,EAAC,UAJR;AAKA,IAAA,KAAK,EAAEN,KALP;AAMA,IAAA,SAAS,MANT;AAOA,IAAA,KAAK,EAAEU,GAAG,CAACA,GAAJ,KAAU,GAAV,GAAgB,EAAhB,GAAmBA,GAAG,CAACA,GAP9B;AAQA,IAAA,SAAS,EAAE,mBAAAsB,CAAC,EAAE;AAACR,MAAAA,OAAO,CAACC,GAAR,CAAYO,CAAC,CAACC,OAAd;AAAuBD,MAAAA,CAAC,CAACC,OAAF,KAAY9B,aAAZ,GAA4BK,OAAO,CAAC,IAAD,CAAnC,GAA0CA,OAAO,CAAC,KAAD,CAAjD;AAAyD,KAR/F;AASA,IAAA,QAAQ,EAAE,kBAACwB,CAAD,EAAK;AACPrB,MAAAA,MAAM,CAACqB,CAAC,CAACE,MAAF,CAASC,KAAV,CAAN;AACH,KAXL;AAaA,IAAA,UAAU,EAAEzB,GAAG,KAAG,EAAN,GAAW,UAAX,GAAsB,EAblC;AAcA,IAAA,UAAU,EAAE;AACR0B,MAAAA,YAAY,EAAE,oBAAC,UAAD;AAAY,QAAA,QAAQ,EAAC,KAArB;AAA2B,QAAA,OAAO,EAAE;AAAA,iBAAI5B,OAAO,CAAC,IAAD,CAAX;AAAA,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuD,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvD;AADN,KAdZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAmBC,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAED,IAAd;AACA,IAAA,oBAAoB,EAAE,KADtB;AAEA,IAAA,oBAAoB,EAAE,KAFtB;AAGA,IAAA,SAAS,MAHT;AAIA,uBAAgB,2BAJhB;AAKA,IAAA,SAAS,EAAE,mBAAAyB,CAAC,EACR;AACIA,MAAAA,CAAC,CAACC,OAAF,KAAY,EAAZ,GAAiBzB,OAAO,CAAC,KAAD,CAAxB,GAAgCA,OAAO,CAAC,IAAD,CAAvC;AACH,KARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUI,oBAAC,WAAD;AAAa,IAAA,iBAAiB,EAAE,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,CADA,EAKA,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAC,KAArB;AAA2B,IAAA,OAAO,EAAE;AAAA,aAAIA,OAAO,CAAC,KAAD,CAAX;AAAA,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwD,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxD,CADA,CALA,CADA,CAVJ,EAqBI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AAAY,IAAA,SAAS,MAArB;AAAsB,IAAA,KAAK,EAAEI,SAA7B;AAAwC,IAAA,QAAQ,EAAE,kBAACoB,CAAD,EAC9C;AACInB,MAAAA,YAAY,CAACmB,CAAC,CAACE,MAAF,CAASC,KAAV,CAAZ;AACH,KAHL;AAII,IAAA,SAAS,EAAE,mBAACH,CAAD,EAAK;AACR,UAAGA,CAAC,CAACC,OAAF,KAAY,EAAf,EACIP,oBAAoB;AAC3B,KAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADA,EAaA,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,mBAAI;AACjBA,MAAAA,oBAAoB;AACnB,KAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,CAbA,CArBJ,EAwCI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQZ,UAAU,CAACuB,GAAX,CAAe,UAAAd,OAAO;AAAA,WAAI,oBAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,SAAS,MAA1B;AAA2B,MAAA,OAAO,MAAlC;AAAmC,MAAA,GAAG,EAAEA,OAAO,CAACd,GAAhD;AACtB,MAAA,OAAO,EAAE,mBAAI;AACba,QAAAA,kBAAkB,CAACC,OAAD,CAAlB;AACAf,QAAAA,OAAO,CAAC,KAAD,CAAP;AACH,OAJyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAIrBe,OAAO,CAACb,GAJa,CAAJ;AAAA,GAAtB,CAFR,CADA,EAUA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEQ,gBAAf;AAAiC,IAAA,QAAQ,EAAE,kBAAAc,CAAC;AAAA,aAAEb,mBAAmB,CAACa,CAAC,CAACE,MAAF,CAASC,KAAV,CAArB;AAAA,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIlC,KAAK,CAACoC,GAAN,CAAU,UAAAd,OAAO,EAAE;AAAC,WAAO;AAAQ,MAAA,GAAG,EAAEA,OAAO,CAACd,GAArB;AAA0B,MAAA,KAAK,EAAEc,OAAO,CAACd,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+Cc,OAAO,CAACd,GAAvD,CAAP;AAA4E,GAAhG,CAFJ,CADJ,CAVA,CAxCJ,CAnBD,CADC,GA+ESP,UAAU,CAAC6B,QAAX,CAAoB,MAApB,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,YAAY,MAApB;AAAqB,IAAA,SAAS,MAA9B;AAA+B,IAAA,KAAK,EAAEf,UAAtC;AAAkD,IAAA,QAAQ,EAAE,kBAACgB,CAAD,EAAK;AAC7Df,MAAAA,aAAa,CAACe,CAAC,CAACE,MAAF,CAASC,KAAV,CAAb;AACH,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIQrB,UAAU,CAACuB,GAAX,CAAe,UAAAd,OAAO,EAAE;AAAC,WAAO,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,OAAO,CAACd,GAAvB;AAA4B,MAAA,KAAK,EAAEc,OAAO,CAACd,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiDc,OAAO,CAACb,GAAzD,CAAP;AAAgF,GAAzG,CAJR,CADJ,CADS,GASAR,UAAU,CAAC6B,QAAX,CAAoB,UAApB,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,KAAK,EAAE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHT;AAIE,IAAA,KAAK,EAAEX,eAJT;AAKE,IAAA,QAAQ,EAAE,kBAAAY,CAAC;AAAA,aAAEX,kBAAkB,CAACW,CAAC,CAACE,MAAF,CAASC,KAAV,CAApB;AAAA,KALb;AAME,IAAA,WAAW,EAAE,qBAAAG,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,CAAc,GAAd,CAAJ;AAAA,KANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASQzB,UAAU,CAACuB,GAAX,CAAe,UAAAd,OAAO;AAAA,WACrB,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,OAAO,CAACd,GAAvB;AAA4B,MAAA,KAAK,EAAEc,OAAO,CAACb,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAEU,eAAe,CAACoB,OAAhB,CAAwBjB,OAAO,CAACb,GAAhC,IAAqC,CAAC,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAEa,OAAO,CAACb,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADqB;AAAA,GAAtB,CATR,CADJ,CADS,GAmBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5Gd,CADJ;AAiHH;AAEDd,QAAQ,CAAC6C,SAAT,GAAqB;AACjBC,EAAAA,OAAO,EAAEvD,SAAS,CAACwD,KADF;AAEjBzC,EAAAA,UAAU,EAAEf,SAAS,CAACyD,KAAV,CAAgB,CAAC,EAAD,EAAI,MAAJ,EAAW,OAAX,EAAmB,UAAnB,CAAhB,CAFK;AAGjB5C,EAAAA,KAAK,EAAEb,SAAS,CAAC0D,MAHA;AAIjB5C,EAAAA,KAAK,EAAEd,SAAS,CAACwD;AAJA,CAArB","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport TextField from '@material-ui/core/TextField'\n// import { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton'\n\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\n\nimport Button from '@material-ui/core/Button'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport PropTypes from 'prop-types'\nimport {FindInPage,Close} from '@material-ui/icons'\nimport { DialogActions } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Input from '@material-ui/core/Input'\nimport Checkbox from '@material-ui/core/Checkbox'\n\n// const useStyles = makeStyles(theme => ({\n//     root: {\n//       display: 'flex',\n//       flexWrap: 'wrap',\n//     },\n//     margin: {\n//       margin: theme.spacing(1),\n//     },\n//     withoutLabel: {\n//       marginTop: theme.spacing(3),\n//     },\n//     textField: {\n//       flexBasis: 200,\n//     },\n//   }));\n\nexport default function IrisaLov(props){\n\n    const {id,name,label,datas,webElement,keyCodeToFire,hotSearch} = props\n\n    const {classes} = useStyles()\n\n    const [open,setOpen] = React.useState(false)\n    const [val,setVal] = useState({cod:'',val:''})\n    const [searchVal,setSearchVal] = useState('')\n    const [dataSearch,setDataSearch] = useState([{cod:'',val:'%'}, ...datas  ])\n\n    const [selectData,setSelectData] = useState('')\n    const [selectPagination,setSelectPagination] = useState('')\n    const [dataMultiSelect,setDataMultiSelect] = useState([])\n\n    function onHandlerClickItem(element){\n        console.log(element)\n        setVal(element)\n    }\n    \n    function onHandlerClickSearch(){\n\n        if(searchVal==='%')\n             setSearchVal('')\n\n\n        if(searchVal==='%' || searchVal.length === 0)\n            setDataSearch([{cod:'',val:'%'}, ...datas])    \n        else\n            setDataSearch([{cod:'',val:'%'}, ...datas].filter(el=>el.val.startsWith(searchVal)))    \n\n    }\n\n    useEffect(()=>{\n        if(typeof hotSearch!=='undefined' && hotSearch)\n            onHandlerClickSearch()\n    },[searchVal])\n\n    return (\n        <React.Fragment > {\n            webElement.includes('popup') ?\n           <div> \n            <TextField\n            id={id}\n            name={name}\n            className={classes}\n            variant=\"outlined\"\n            label={label}\n            fullWidth\n            value={val.val==='%' ? '':val.val}\n            onKeyDown={e=>{console.log(e.keyCode);e.keyCode===keyCodeToFire ? setOpen(true):setOpen(false)}}\n            onChange={(e)=>{\n                    setVal(e.target.value); \n                }\n            }\n            helperText={val==='' ? 'Required':''}\n            InputProps={{\n                endAdornment: <IconButton position=\"end\" onClick={()=>setOpen(true)}><FindInPage/></IconButton>\n            }}\n            />\n            <Dialog open={open} \n            disableBackdropClick={false}\n            disableEscapeKeyDown={false}\n            fullWidth\n            aria-labelledby=\"confirmation-dialog-title\"            \n            onKeyDown={e=>\n                {\n                    e.keyCode===27 ? setOpen(false):setOpen(true);\n                }}>               \n                \n                <DialogTitle disableTypography={false}>\n                <Grid container>\n                <Grid item xs={11}>\n                <span>dialog title ....</span>\n                </Grid>\n\n                <Grid item xs={1}>\n                <IconButton position=\"end\" onClick={()=>setOpen(false)}><Close/></IconButton>\n                </Grid>\n                </Grid>\n                </DialogTitle>\n                <Grid container>\n                <Grid item xs={10}>\n                <TextField  fullWidth value={searchVal} onChange={(e)=>\n                    {\n                        setSearchVal(e.target.value);\n                    }} \n                    onKeyDown={(e)=>{\n                            if(e.keyCode===13)\n                                onHandlerClickSearch()\n                        }\n                    }\n                    />\n                </Grid> \n                <Grid item xs={2}>     \n                <Button onClick={()=>{\n                    onHandlerClickSearch()\n                    }}>Search</Button>\n                </Grid>    \n                </Grid>    \n                <DialogContent>\n                <List>\n                    {\n                        dataSearch.map(element=>( <ListItem button autoFocus divider key={element.cod} \n                            onClick={()=>{\n                            onHandlerClickItem(element)\n                            setOpen(false)\n                        }}> {element.val}</ListItem>))\n                    }\n                </List>\n                <DialogActions>\n                    <Select value={selectPagination} onChange={e=>setSelectPagination(e.target.value)}>\n                    {\n                        datas.map(element=>{return <option key={element.cod} value={element.cod}>{element.cod}</option>})                                             \n                    }                                                       \n                    </Select>\n                </DialogActions>\n                </DialogContent>\n            </Dialog>\n            </div> : webElement.includes('list') ?\n            <div>\n                <Select displayEmpty fullWidth value={selectData} onChange={(e)=>{\n                    setSelectData(e.target.value)\n                }} >\n                    {                        \n                        dataSearch.map(element=>{return <MenuItem key={element.cod} value={element.cod}>{element.val}</MenuItem>})                                             \n                    }                                                       \n                </Select>                \n            </div> : webElement.includes('multiple') ?\n            <div>\n                <Select\n                  multiple\n                  fullWidth\n                  input={<Input />}\n                  value={dataMultiSelect} \n                  onChange={e=>setDataMultiSelect(e.target.value)}  \n                  renderValue={selected => selected.join(',')}\n                  >\n                    {                        \n                        dataSearch.map(element=> \n                        (<MenuItem key={element.cod} value={element.val}>\n                          <Checkbox checked={dataMultiSelect.indexOf(element.val)>-1}/>\n                          <ListItemText primary={element.val}/>\n                        </MenuItem>)                    \n                    )                                             \n                    }                                                       \n                </Select>                   \n            </div>  : <div>others</div>         \n        }\n        </React.Fragment>\n    )\n}\n\nIrisaLov.propTypes = {\n    columns: PropTypes.array,\n    webElement: PropTypes.oneOf([\"\",\"list\",\"popup\",\"multiple\"]),\n    label: PropTypes.string,\n    datas: PropTypes.array\n}\n"]},"metadata":{},"sourceType":"module"}